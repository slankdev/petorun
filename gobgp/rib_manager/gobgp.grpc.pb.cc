// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: gobgp.proto

#include "gobgp.pb.h"
#include "gobgp.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace gobgpapi {

static const char* GobgpApi_method_names[] = {
  "/gobgpapi.GobgpApi/StartServer",
  "/gobgpapi.GobgpApi/StopServer",
  "/gobgpapi.GobgpApi/GetServer",
  "/gobgpapi.GobgpApi/AddNeighbor",
  "/gobgpapi.GobgpApi/DeleteNeighbor",
  "/gobgpapi.GobgpApi/GetNeighbor",
  "/gobgpapi.GobgpApi/ResetNeighbor",
  "/gobgpapi.GobgpApi/SoftResetNeighbor",
  "/gobgpapi.GobgpApi/ShutdownNeighbor",
  "/gobgpapi.GobgpApi/EnableNeighbor",
  "/gobgpapi.GobgpApi/DisableNeighbor",
  "/gobgpapi.GobgpApi/GetRib",
  "/gobgpapi.GobgpApi/GetPath",
  "/gobgpapi.GobgpApi/ValidateRib",
  "/gobgpapi.GobgpApi/AddPath",
  "/gobgpapi.GobgpApi/DeletePath",
  "/gobgpapi.GobgpApi/MonitorRib",
  "/gobgpapi.GobgpApi/MonitorPeerState",
  "/gobgpapi.GobgpApi/EnableMrt",
  "/gobgpapi.GobgpApi/DisableMrt",
  "/gobgpapi.GobgpApi/InjectMrt",
  "/gobgpapi.GobgpApi/AddBmp",
  "/gobgpapi.GobgpApi/DeleteBmp",
  "/gobgpapi.GobgpApi/GetRpki",
  "/gobgpapi.GobgpApi/AddRpki",
  "/gobgpapi.GobgpApi/DeleteRpki",
  "/gobgpapi.GobgpApi/EnableRpki",
  "/gobgpapi.GobgpApi/DisableRpki",
  "/gobgpapi.GobgpApi/ResetRpki",
  "/gobgpapi.GobgpApi/SoftResetRpki",
  "/gobgpapi.GobgpApi/GetRoa",
  "/gobgpapi.GobgpApi/EnableZebra",
  "/gobgpapi.GobgpApi/AddVrf",
  "/gobgpapi.GobgpApi/DeleteVrf",
  "/gobgpapi.GobgpApi/GetVrf",
  "/gobgpapi.GobgpApi/GetDefinedSet",
  "/gobgpapi.GobgpApi/AddDefinedSet",
  "/gobgpapi.GobgpApi/DeleteDefinedSet",
  "/gobgpapi.GobgpApi/ReplaceDefinedSet",
  "/gobgpapi.GobgpApi/GetStatement",
  "/gobgpapi.GobgpApi/AddStatement",
  "/gobgpapi.GobgpApi/DeleteStatement",
  "/gobgpapi.GobgpApi/ReplaceStatement",
  "/gobgpapi.GobgpApi/GetPolicy",
  "/gobgpapi.GobgpApi/AddPolicy",
  "/gobgpapi.GobgpApi/DeletePolicy",
  "/gobgpapi.GobgpApi/ReplacePolicy",
  "/gobgpapi.GobgpApi/GetPolicyAssignment",
  "/gobgpapi.GobgpApi/AddPolicyAssignment",
  "/gobgpapi.GobgpApi/DeletePolicyAssignment",
  "/gobgpapi.GobgpApi/ReplacePolicyAssignment",
  "/gobgpapi.GobgpApi/GetRibInfo",
};

std::unique_ptr< GobgpApi::Stub> GobgpApi::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< GobgpApi::Stub> stub(new GobgpApi::Stub(channel));
  return stub;
}

GobgpApi::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_StartServer_(GobgpApi_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopServer_(GobgpApi_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetServer_(GobgpApi_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddNeighbor_(GobgpApi_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNeighbor_(GobgpApi_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNeighbor_(GobgpApi_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ResetNeighbor_(GobgpApi_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SoftResetNeighbor_(GobgpApi_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ShutdownNeighbor_(GobgpApi_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EnableNeighbor_(GobgpApi_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DisableNeighbor_(GobgpApi_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRib_(GobgpApi_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPath_(GobgpApi_method_names[12], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_ValidateRib_(GobgpApi_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddPath_(GobgpApi_method_names[14], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeletePath_(GobgpApi_method_names[15], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_MonitorRib_(GobgpApi_method_names[16], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_MonitorPeerState_(GobgpApi_method_names[17], ::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_EnableMrt_(GobgpApi_method_names[18], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DisableMrt_(GobgpApi_method_names[19], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_InjectMrt_(GobgpApi_method_names[20], ::grpc::internal::RpcMethod::CLIENT_STREAMING, channel)
  , rpcmethod_AddBmp_(GobgpApi_method_names[21], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteBmp_(GobgpApi_method_names[22], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRpki_(GobgpApi_method_names[23], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddRpki_(GobgpApi_method_names[24], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteRpki_(GobgpApi_method_names[25], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EnableRpki_(GobgpApi_method_names[26], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DisableRpki_(GobgpApi_method_names[27], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ResetRpki_(GobgpApi_method_names[28], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SoftResetRpki_(GobgpApi_method_names[29], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRoa_(GobgpApi_method_names[30], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EnableZebra_(GobgpApi_method_names[31], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddVrf_(GobgpApi_method_names[32], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteVrf_(GobgpApi_method_names[33], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVrf_(GobgpApi_method_names[34], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDefinedSet_(GobgpApi_method_names[35], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddDefinedSet_(GobgpApi_method_names[36], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDefinedSet_(GobgpApi_method_names[37], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReplaceDefinedSet_(GobgpApi_method_names[38], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetStatement_(GobgpApi_method_names[39], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddStatement_(GobgpApi_method_names[40], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteStatement_(GobgpApi_method_names[41], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReplaceStatement_(GobgpApi_method_names[42], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPolicy_(GobgpApi_method_names[43], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddPolicy_(GobgpApi_method_names[44], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeletePolicy_(GobgpApi_method_names[45], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReplacePolicy_(GobgpApi_method_names[46], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPolicyAssignment_(GobgpApi_method_names[47], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddPolicyAssignment_(GobgpApi_method_names[48], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeletePolicyAssignment_(GobgpApi_method_names[49], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReplacePolicyAssignment_(GobgpApi_method_names[50], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRibInfo_(GobgpApi_method_names[51], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status GobgpApi::Stub::StartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::gobgpapi::StartServerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_StartServer_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>* GobgpApi::Stub::AsyncStartServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::StartServerResponse>::Create(channel_.get(), cq, rpcmethod_StartServer_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>* GobgpApi::Stub::PrepareAsyncStartServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::StartServerResponse>::Create(channel_.get(), cq, rpcmethod_StartServer_, context, request, false);
}

::grpc::Status GobgpApi::Stub::StopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::gobgpapi::StopServerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_StopServer_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>* GobgpApi::Stub::AsyncStopServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::StopServerResponse>::Create(channel_.get(), cq, rpcmethod_StopServer_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>* GobgpApi::Stub::PrepareAsyncStopServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::StopServerResponse>::Create(channel_.get(), cq, rpcmethod_StopServer_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::gobgpapi::GetServerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetServer_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>* GobgpApi::Stub::AsyncGetServerRaw(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetServerResponse>::Create(channel_.get(), cq, rpcmethod_GetServer_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>* GobgpApi::Stub::PrepareAsyncGetServerRaw(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetServerResponse>::Create(channel_.get(), cq, rpcmethod_GetServer_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::gobgpapi::AddNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>* GobgpApi::Stub::AsyncAddNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddNeighborResponse>::Create(channel_.get(), cq, rpcmethod_AddNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>* GobgpApi::Stub::PrepareAsyncAddNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddNeighborResponse>::Create(channel_.get(), cq, rpcmethod_AddNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::gobgpapi::DeleteNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>* GobgpApi::Stub::AsyncDeleteNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteNeighborResponse>::Create(channel_.get(), cq, rpcmethod_DeleteNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>* GobgpApi::Stub::PrepareAsyncDeleteNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteNeighborResponse>::Create(channel_.get(), cq, rpcmethod_DeleteNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::gobgpapi::GetNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>* GobgpApi::Stub::AsyncGetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetNeighborResponse>::Create(channel_.get(), cq, rpcmethod_GetNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>* GobgpApi::Stub::PrepareAsyncGetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetNeighborResponse>::Create(channel_.get(), cq, rpcmethod_GetNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::gobgpapi::ResetNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ResetNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>* GobgpApi::Stub::AsyncResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ResetNeighborResponse>::Create(channel_.get(), cq, rpcmethod_ResetNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>* GobgpApi::Stub::PrepareAsyncResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ResetNeighborResponse>::Create(channel_.get(), cq, rpcmethod_ResetNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::SoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::gobgpapi::SoftResetNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SoftResetNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>* GobgpApi::Stub::AsyncSoftResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::SoftResetNeighborResponse>::Create(channel_.get(), cq, rpcmethod_SoftResetNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>* GobgpApi::Stub::PrepareAsyncSoftResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::SoftResetNeighborResponse>::Create(channel_.get(), cq, rpcmethod_SoftResetNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::gobgpapi::ShutdownNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ShutdownNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>* GobgpApi::Stub::AsyncShutdownNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ShutdownNeighborResponse>::Create(channel_.get(), cq, rpcmethod_ShutdownNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>* GobgpApi::Stub::PrepareAsyncShutdownNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ShutdownNeighborResponse>::Create(channel_.get(), cq, rpcmethod_ShutdownNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::EnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::gobgpapi::EnableNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_EnableNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>* GobgpApi::Stub::AsyncEnableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableNeighborResponse>::Create(channel_.get(), cq, rpcmethod_EnableNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>* GobgpApi::Stub::PrepareAsyncEnableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableNeighborResponse>::Create(channel_.get(), cq, rpcmethod_EnableNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::gobgpapi::DisableNeighborResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DisableNeighbor_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>* GobgpApi::Stub::AsyncDisableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DisableNeighborResponse>::Create(channel_.get(), cq, rpcmethod_DisableNeighbor_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>* GobgpApi::Stub::PrepareAsyncDisableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DisableNeighborResponse>::Create(channel_.get(), cq, rpcmethod_DisableNeighbor_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::gobgpapi::GetRibResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRib_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>* GobgpApi::Stub::AsyncGetRibRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRibResponse>::Create(channel_.get(), cq, rpcmethod_GetRib_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>* GobgpApi::Stub::PrepareAsyncGetRibRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRibResponse>::Create(channel_.get(), cq, rpcmethod_GetRib_, context, request, false);
}

::grpc::ClientReader< ::gobgpapi::Path>* GobgpApi::Stub::GetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::gobgpapi::Path>::Create(channel_.get(), rpcmethod_GetPath_, context, request);
}

::grpc::ClientAsyncReader< ::gobgpapi::Path>* GobgpApi::Stub::AsyncGetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::gobgpapi::Path>::Create(channel_.get(), cq, rpcmethod_GetPath_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::gobgpapi::Path>* GobgpApi::Stub::PrepareAsyncGetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::gobgpapi::Path>::Create(channel_.get(), cq, rpcmethod_GetPath_, context, request, false, nullptr);
}

::grpc::Status GobgpApi::Stub::ValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::gobgpapi::ValidateRibResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ValidateRib_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>* GobgpApi::Stub::AsyncValidateRibRaw(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ValidateRibResponse>::Create(channel_.get(), cq, rpcmethod_ValidateRib_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>* GobgpApi::Stub::PrepareAsyncValidateRibRaw(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ValidateRibResponse>::Create(channel_.get(), cq, rpcmethod_ValidateRib_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::gobgpapi::AddPathResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddPath_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>* GobgpApi::Stub::AsyncAddPathRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddPathResponse>::Create(channel_.get(), cq, rpcmethod_AddPath_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>* GobgpApi::Stub::PrepareAsyncAddPathRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddPathResponse>::Create(channel_.get(), cq, rpcmethod_AddPath_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::gobgpapi::DeletePathResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeletePath_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>* GobgpApi::Stub::AsyncDeletePathRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeletePathResponse>::Create(channel_.get(), cq, rpcmethod_DeletePath_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>* GobgpApi::Stub::PrepareAsyncDeletePathRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeletePathResponse>::Create(channel_.get(), cq, rpcmethod_DeletePath_, context, request, false);
}

::grpc::ClientReader< ::gobgpapi::Destination>* GobgpApi::Stub::MonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::gobgpapi::Destination>::Create(channel_.get(), rpcmethod_MonitorRib_, context, request);
}

::grpc::ClientAsyncReader< ::gobgpapi::Destination>* GobgpApi::Stub::AsyncMonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::gobgpapi::Destination>::Create(channel_.get(), cq, rpcmethod_MonitorRib_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::gobgpapi::Destination>* GobgpApi::Stub::PrepareAsyncMonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::gobgpapi::Destination>::Create(channel_.get(), cq, rpcmethod_MonitorRib_, context, request, false, nullptr);
}

::grpc::ClientReader< ::gobgpapi::Peer>* GobgpApi::Stub::MonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request) {
  return ::grpc::internal::ClientReaderFactory< ::gobgpapi::Peer>::Create(channel_.get(), rpcmethod_MonitorPeerState_, context, request);
}

::grpc::ClientAsyncReader< ::gobgpapi::Peer>* GobgpApi::Stub::AsyncMonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::gobgpapi::Peer>::Create(channel_.get(), cq, rpcmethod_MonitorPeerState_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::gobgpapi::Peer>* GobgpApi::Stub::PrepareAsyncMonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::gobgpapi::Peer>::Create(channel_.get(), cq, rpcmethod_MonitorPeerState_, context, request, false, nullptr);
}

::grpc::Status GobgpApi::Stub::EnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::gobgpapi::EnableMrtResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_EnableMrt_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>* GobgpApi::Stub::AsyncEnableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableMrtResponse>::Create(channel_.get(), cq, rpcmethod_EnableMrt_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>* GobgpApi::Stub::PrepareAsyncEnableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableMrtResponse>::Create(channel_.get(), cq, rpcmethod_EnableMrt_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::gobgpapi::DisableMrtResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DisableMrt_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>* GobgpApi::Stub::AsyncDisableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DisableMrtResponse>::Create(channel_.get(), cq, rpcmethod_DisableMrt_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>* GobgpApi::Stub::PrepareAsyncDisableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DisableMrtResponse>::Create(channel_.get(), cq, rpcmethod_DisableMrt_, context, request, false);
}

::grpc::ClientWriter< ::gobgpapi::InjectMrtRequest>* GobgpApi::Stub::InjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response) {
  return ::grpc::internal::ClientWriterFactory< ::gobgpapi::InjectMrtRequest>::Create(channel_.get(), rpcmethod_InjectMrt_, context, response);
}

::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>* GobgpApi::Stub::AsyncInjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::gobgpapi::InjectMrtRequest>::Create(channel_.get(), cq, rpcmethod_InjectMrt_, context, response, true, tag);
}

::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>* GobgpApi::Stub::PrepareAsyncInjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncWriterFactory< ::gobgpapi::InjectMrtRequest>::Create(channel_.get(), cq, rpcmethod_InjectMrt_, context, response, false, nullptr);
}

::grpc::Status GobgpApi::Stub::AddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::gobgpapi::AddBmpResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddBmp_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>* GobgpApi::Stub::AsyncAddBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddBmpResponse>::Create(channel_.get(), cq, rpcmethod_AddBmp_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>* GobgpApi::Stub::PrepareAsyncAddBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddBmpResponse>::Create(channel_.get(), cq, rpcmethod_AddBmp_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::gobgpapi::DeleteBmpResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteBmp_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>* GobgpApi::Stub::AsyncDeleteBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteBmpResponse>::Create(channel_.get(), cq, rpcmethod_DeleteBmp_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>* GobgpApi::Stub::PrepareAsyncDeleteBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteBmpResponse>::Create(channel_.get(), cq, rpcmethod_DeleteBmp_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::gobgpapi::GetRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>* GobgpApi::Stub::AsyncGetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRpkiResponse>::Create(channel_.get(), cq, rpcmethod_GetRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>* GobgpApi::Stub::PrepareAsyncGetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRpkiResponse>::Create(channel_.get(), cq, rpcmethod_GetRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::gobgpapi::AddRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>* GobgpApi::Stub::AsyncAddRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddRpkiResponse>::Create(channel_.get(), cq, rpcmethod_AddRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>* GobgpApi::Stub::PrepareAsyncAddRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddRpkiResponse>::Create(channel_.get(), cq, rpcmethod_AddRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::gobgpapi::DeleteRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>* GobgpApi::Stub::AsyncDeleteRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteRpkiResponse>::Create(channel_.get(), cq, rpcmethod_DeleteRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>* GobgpApi::Stub::PrepareAsyncDeleteRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteRpkiResponse>::Create(channel_.get(), cq, rpcmethod_DeleteRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::EnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::gobgpapi::EnableRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_EnableRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>* GobgpApi::Stub::AsyncEnableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableRpkiResponse>::Create(channel_.get(), cq, rpcmethod_EnableRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>* GobgpApi::Stub::PrepareAsyncEnableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableRpkiResponse>::Create(channel_.get(), cq, rpcmethod_EnableRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::gobgpapi::DisableRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DisableRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>* GobgpApi::Stub::AsyncDisableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DisableRpkiResponse>::Create(channel_.get(), cq, rpcmethod_DisableRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>* GobgpApi::Stub::PrepareAsyncDisableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DisableRpkiResponse>::Create(channel_.get(), cq, rpcmethod_DisableRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::gobgpapi::ResetRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ResetRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>* GobgpApi::Stub::AsyncResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ResetRpkiResponse>::Create(channel_.get(), cq, rpcmethod_ResetRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>* GobgpApi::Stub::PrepareAsyncResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ResetRpkiResponse>::Create(channel_.get(), cq, rpcmethod_ResetRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::SoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::gobgpapi::SoftResetRpkiResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SoftResetRpki_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>* GobgpApi::Stub::AsyncSoftResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::SoftResetRpkiResponse>::Create(channel_.get(), cq, rpcmethod_SoftResetRpki_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>* GobgpApi::Stub::PrepareAsyncSoftResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::SoftResetRpkiResponse>::Create(channel_.get(), cq, rpcmethod_SoftResetRpki_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::gobgpapi::GetRoaResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRoa_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>* GobgpApi::Stub::AsyncGetRoaRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRoaResponse>::Create(channel_.get(), cq, rpcmethod_GetRoa_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>* GobgpApi::Stub::PrepareAsyncGetRoaRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRoaResponse>::Create(channel_.get(), cq, rpcmethod_GetRoa_, context, request, false);
}

::grpc::Status GobgpApi::Stub::EnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::gobgpapi::EnableZebraResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_EnableZebra_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>* GobgpApi::Stub::AsyncEnableZebraRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableZebraResponse>::Create(channel_.get(), cq, rpcmethod_EnableZebra_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>* GobgpApi::Stub::PrepareAsyncEnableZebraRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::EnableZebraResponse>::Create(channel_.get(), cq, rpcmethod_EnableZebra_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::gobgpapi::AddVrfResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddVrf_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>* GobgpApi::Stub::AsyncAddVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddVrfResponse>::Create(channel_.get(), cq, rpcmethod_AddVrf_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>* GobgpApi::Stub::PrepareAsyncAddVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddVrfResponse>::Create(channel_.get(), cq, rpcmethod_AddVrf_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::gobgpapi::DeleteVrfResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteVrf_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>* GobgpApi::Stub::AsyncDeleteVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteVrfResponse>::Create(channel_.get(), cq, rpcmethod_DeleteVrf_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>* GobgpApi::Stub::PrepareAsyncDeleteVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteVrfResponse>::Create(channel_.get(), cq, rpcmethod_DeleteVrf_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::gobgpapi::GetVrfResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetVrf_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>* GobgpApi::Stub::AsyncGetVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetVrfResponse>::Create(channel_.get(), cq, rpcmethod_GetVrf_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>* GobgpApi::Stub::PrepareAsyncGetVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetVrfResponse>::Create(channel_.get(), cq, rpcmethod_GetVrf_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::gobgpapi::GetDefinedSetResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetDefinedSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>* GobgpApi::Stub::AsyncGetDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_GetDefinedSet_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>* GobgpApi::Stub::PrepareAsyncGetDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_GetDefinedSet_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::gobgpapi::AddDefinedSetResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddDefinedSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>* GobgpApi::Stub::AsyncAddDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_AddDefinedSet_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>* GobgpApi::Stub::PrepareAsyncAddDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_AddDefinedSet_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::gobgpapi::DeleteDefinedSetResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteDefinedSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>* GobgpApi::Stub::AsyncDeleteDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_DeleteDefinedSet_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>* GobgpApi::Stub::PrepareAsyncDeleteDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_DeleteDefinedSet_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::gobgpapi::ReplaceDefinedSetResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ReplaceDefinedSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>* GobgpApi::Stub::AsyncReplaceDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplaceDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_ReplaceDefinedSet_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>* GobgpApi::Stub::PrepareAsyncReplaceDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplaceDefinedSetResponse>::Create(channel_.get(), cq, rpcmethod_ReplaceDefinedSet_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::gobgpapi::GetStatementResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetStatement_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>* GobgpApi::Stub::AsyncGetStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetStatementResponse>::Create(channel_.get(), cq, rpcmethod_GetStatement_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>* GobgpApi::Stub::PrepareAsyncGetStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetStatementResponse>::Create(channel_.get(), cq, rpcmethod_GetStatement_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::gobgpapi::AddStatementResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddStatement_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>* GobgpApi::Stub::AsyncAddStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddStatementResponse>::Create(channel_.get(), cq, rpcmethod_AddStatement_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>* GobgpApi::Stub::PrepareAsyncAddStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddStatementResponse>::Create(channel_.get(), cq, rpcmethod_AddStatement_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::gobgpapi::DeleteStatementResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteStatement_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>* GobgpApi::Stub::AsyncDeleteStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteStatementResponse>::Create(channel_.get(), cq, rpcmethod_DeleteStatement_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>* GobgpApi::Stub::PrepareAsyncDeleteStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeleteStatementResponse>::Create(channel_.get(), cq, rpcmethod_DeleteStatement_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::gobgpapi::ReplaceStatementResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ReplaceStatement_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>* GobgpApi::Stub::AsyncReplaceStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplaceStatementResponse>::Create(channel_.get(), cq, rpcmethod_ReplaceStatement_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>* GobgpApi::Stub::PrepareAsyncReplaceStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplaceStatementResponse>::Create(channel_.get(), cq, rpcmethod_ReplaceStatement_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::gobgpapi::GetPolicyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>* GobgpApi::Stub::AsyncGetPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetPolicyResponse>::Create(channel_.get(), cq, rpcmethod_GetPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>* GobgpApi::Stub::PrepareAsyncGetPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetPolicyResponse>::Create(channel_.get(), cq, rpcmethod_GetPolicy_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::gobgpapi::AddPolicyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>* GobgpApi::Stub::AsyncAddPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddPolicyResponse>::Create(channel_.get(), cq, rpcmethod_AddPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>* GobgpApi::Stub::PrepareAsyncAddPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddPolicyResponse>::Create(channel_.get(), cq, rpcmethod_AddPolicy_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::gobgpapi::DeletePolicyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeletePolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>* GobgpApi::Stub::AsyncDeletePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeletePolicyResponse>::Create(channel_.get(), cq, rpcmethod_DeletePolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>* GobgpApi::Stub::PrepareAsyncDeletePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeletePolicyResponse>::Create(channel_.get(), cq, rpcmethod_DeletePolicy_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::gobgpapi::ReplacePolicyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ReplacePolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>* GobgpApi::Stub::AsyncReplacePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplacePolicyResponse>::Create(channel_.get(), cq, rpcmethod_ReplacePolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>* GobgpApi::Stub::PrepareAsyncReplacePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplacePolicyResponse>::Create(channel_.get(), cq, rpcmethod_ReplacePolicy_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::gobgpapi::GetPolicyAssignmentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetPolicyAssignment_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>* GobgpApi::Stub::AsyncGetPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetPolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_GetPolicyAssignment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>* GobgpApi::Stub::PrepareAsyncGetPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetPolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_GetPolicyAssignment_, context, request, false);
}

::grpc::Status GobgpApi::Stub::AddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::gobgpapi::AddPolicyAssignmentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_AddPolicyAssignment_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>* GobgpApi::Stub::AsyncAddPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddPolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_AddPolicyAssignment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>* GobgpApi::Stub::PrepareAsyncAddPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::AddPolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_AddPolicyAssignment_, context, request, false);
}

::grpc::Status GobgpApi::Stub::DeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::gobgpapi::DeletePolicyAssignmentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeletePolicyAssignment_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>* GobgpApi::Stub::AsyncDeletePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeletePolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_DeletePolicyAssignment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>* GobgpApi::Stub::PrepareAsyncDeletePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::DeletePolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_DeletePolicyAssignment_, context, request, false);
}

::grpc::Status GobgpApi::Stub::ReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ReplacePolicyAssignment_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>* GobgpApi::Stub::AsyncReplacePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplacePolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_ReplacePolicyAssignment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>* GobgpApi::Stub::PrepareAsyncReplacePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::ReplacePolicyAssignmentResponse>::Create(channel_.get(), cq, rpcmethod_ReplacePolicyAssignment_, context, request, false);
}

::grpc::Status GobgpApi::Stub::GetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::gobgpapi::GetRibInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRibInfo_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>* GobgpApi::Stub::AsyncGetRibInfoRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRibInfoResponse>::Create(channel_.get(), cq, rpcmethod_GetRibInfo_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>* GobgpApi::Stub::PrepareAsyncGetRibInfoRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::gobgpapi::GetRibInfoResponse>::Create(channel_.get(), cq, rpcmethod_GetRibInfo_, context, request, false);
}

GobgpApi::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::StartServerRequest, ::gobgpapi::StartServerResponse>(
          std::mem_fn(&GobgpApi::Service::StartServer), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::StopServerRequest, ::gobgpapi::StopServerResponse>(
          std::mem_fn(&GobgpApi::Service::StopServer), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetServerRequest, ::gobgpapi::GetServerResponse>(
          std::mem_fn(&GobgpApi::Service::GetServer), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddNeighborRequest, ::gobgpapi::AddNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::AddNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeleteNeighborRequest, ::gobgpapi::DeleteNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::DeleteNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetNeighborRequest, ::gobgpapi::GetNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::GetNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ResetNeighborRequest, ::gobgpapi::ResetNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::ResetNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::SoftResetNeighborRequest, ::gobgpapi::SoftResetNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::SoftResetNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ShutdownNeighborRequest, ::gobgpapi::ShutdownNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::ShutdownNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::EnableNeighborRequest, ::gobgpapi::EnableNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::EnableNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DisableNeighborRequest, ::gobgpapi::DisableNeighborResponse>(
          std::mem_fn(&GobgpApi::Service::DisableNeighbor), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetRibRequest, ::gobgpapi::GetRibResponse>(
          std::mem_fn(&GobgpApi::Service::GetRib), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[12],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< GobgpApi::Service, ::gobgpapi::GetPathRequest, ::gobgpapi::Path>(
          std::mem_fn(&GobgpApi::Service::GetPath), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ValidateRibRequest, ::gobgpapi::ValidateRibResponse>(
          std::mem_fn(&GobgpApi::Service::ValidateRib), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddPathRequest, ::gobgpapi::AddPathResponse>(
          std::mem_fn(&GobgpApi::Service::AddPath), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeletePathRequest, ::gobgpapi::DeletePathResponse>(
          std::mem_fn(&GobgpApi::Service::DeletePath), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[16],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< GobgpApi::Service, ::gobgpapi::MonitorRibRequest, ::gobgpapi::Destination>(
          std::mem_fn(&GobgpApi::Service::MonitorRib), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[17],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< GobgpApi::Service, ::gobgpapi::Arguments, ::gobgpapi::Peer>(
          std::mem_fn(&GobgpApi::Service::MonitorPeerState), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::EnableMrtRequest, ::gobgpapi::EnableMrtResponse>(
          std::mem_fn(&GobgpApi::Service::EnableMrt), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DisableMrtRequest, ::gobgpapi::DisableMrtResponse>(
          std::mem_fn(&GobgpApi::Service::DisableMrt), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[20],
      ::grpc::internal::RpcMethod::CLIENT_STREAMING,
      new ::grpc::internal::ClientStreamingHandler< GobgpApi::Service, ::gobgpapi::InjectMrtRequest, ::gobgpapi::InjectMrtResponse>(
          std::mem_fn(&GobgpApi::Service::InjectMrt), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddBmpRequest, ::gobgpapi::AddBmpResponse>(
          std::mem_fn(&GobgpApi::Service::AddBmp), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeleteBmpRequest, ::gobgpapi::DeleteBmpResponse>(
          std::mem_fn(&GobgpApi::Service::DeleteBmp), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetRpkiRequest, ::gobgpapi::GetRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::GetRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddRpkiRequest, ::gobgpapi::AddRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::AddRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeleteRpkiRequest, ::gobgpapi::DeleteRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::DeleteRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::EnableRpkiRequest, ::gobgpapi::EnableRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::EnableRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DisableRpkiRequest, ::gobgpapi::DisableRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::DisableRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ResetRpkiRequest, ::gobgpapi::ResetRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::ResetRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::SoftResetRpkiRequest, ::gobgpapi::SoftResetRpkiResponse>(
          std::mem_fn(&GobgpApi::Service::SoftResetRpki), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[30],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetRoaRequest, ::gobgpapi::GetRoaResponse>(
          std::mem_fn(&GobgpApi::Service::GetRoa), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[31],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::EnableZebraRequest, ::gobgpapi::EnableZebraResponse>(
          std::mem_fn(&GobgpApi::Service::EnableZebra), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[32],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddVrfRequest, ::gobgpapi::AddVrfResponse>(
          std::mem_fn(&GobgpApi::Service::AddVrf), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[33],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeleteVrfRequest, ::gobgpapi::DeleteVrfResponse>(
          std::mem_fn(&GobgpApi::Service::DeleteVrf), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[34],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetVrfRequest, ::gobgpapi::GetVrfResponse>(
          std::mem_fn(&GobgpApi::Service::GetVrf), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[35],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetDefinedSetRequest, ::gobgpapi::GetDefinedSetResponse>(
          std::mem_fn(&GobgpApi::Service::GetDefinedSet), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[36],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddDefinedSetRequest, ::gobgpapi::AddDefinedSetResponse>(
          std::mem_fn(&GobgpApi::Service::AddDefinedSet), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[37],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeleteDefinedSetRequest, ::gobgpapi::DeleteDefinedSetResponse>(
          std::mem_fn(&GobgpApi::Service::DeleteDefinedSet), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[38],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ReplaceDefinedSetRequest, ::gobgpapi::ReplaceDefinedSetResponse>(
          std::mem_fn(&GobgpApi::Service::ReplaceDefinedSet), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[39],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetStatementRequest, ::gobgpapi::GetStatementResponse>(
          std::mem_fn(&GobgpApi::Service::GetStatement), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[40],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddStatementRequest, ::gobgpapi::AddStatementResponse>(
          std::mem_fn(&GobgpApi::Service::AddStatement), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[41],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeleteStatementRequest, ::gobgpapi::DeleteStatementResponse>(
          std::mem_fn(&GobgpApi::Service::DeleteStatement), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[42],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ReplaceStatementRequest, ::gobgpapi::ReplaceStatementResponse>(
          std::mem_fn(&GobgpApi::Service::ReplaceStatement), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[43],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetPolicyRequest, ::gobgpapi::GetPolicyResponse>(
          std::mem_fn(&GobgpApi::Service::GetPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[44],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddPolicyRequest, ::gobgpapi::AddPolicyResponse>(
          std::mem_fn(&GobgpApi::Service::AddPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[45],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeletePolicyRequest, ::gobgpapi::DeletePolicyResponse>(
          std::mem_fn(&GobgpApi::Service::DeletePolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[46],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ReplacePolicyRequest, ::gobgpapi::ReplacePolicyResponse>(
          std::mem_fn(&GobgpApi::Service::ReplacePolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[47],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetPolicyAssignmentRequest, ::gobgpapi::GetPolicyAssignmentResponse>(
          std::mem_fn(&GobgpApi::Service::GetPolicyAssignment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[48],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::AddPolicyAssignmentRequest, ::gobgpapi::AddPolicyAssignmentResponse>(
          std::mem_fn(&GobgpApi::Service::AddPolicyAssignment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[49],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::DeletePolicyAssignmentRequest, ::gobgpapi::DeletePolicyAssignmentResponse>(
          std::mem_fn(&GobgpApi::Service::DeletePolicyAssignment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[50],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::ReplacePolicyAssignmentRequest, ::gobgpapi::ReplacePolicyAssignmentResponse>(
          std::mem_fn(&GobgpApi::Service::ReplacePolicyAssignment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GobgpApi_method_names[51],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< GobgpApi::Service, ::gobgpapi::GetRibInfoRequest, ::gobgpapi::GetRibInfoResponse>(
          std::mem_fn(&GobgpApi::Service::GetRibInfo), this)));
}

GobgpApi::Service::~Service() {
}

::grpc::Status GobgpApi::Service::StartServer(::grpc::ServerContext* context, const ::gobgpapi::StartServerRequest* request, ::gobgpapi::StartServerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::StopServer(::grpc::ServerContext* context, const ::gobgpapi::StopServerRequest* request, ::gobgpapi::StopServerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetServer(::grpc::ServerContext* context, const ::gobgpapi::GetServerRequest* request, ::gobgpapi::GetServerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddNeighbor(::grpc::ServerContext* context, const ::gobgpapi::AddNeighborRequest* request, ::gobgpapi::AddNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeleteNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DeleteNeighborRequest* request, ::gobgpapi::DeleteNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::GetNeighborRequest* request, ::gobgpapi::GetNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ResetNeighborRequest* request, ::gobgpapi::ResetNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::SoftResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::SoftResetNeighborRequest* request, ::gobgpapi::SoftResetNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ShutdownNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ShutdownNeighborRequest* request, ::gobgpapi::ShutdownNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::EnableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::EnableNeighborRequest* request, ::gobgpapi::EnableNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DisableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DisableNeighborRequest* request, ::gobgpapi::DisableNeighborResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetRib(::grpc::ServerContext* context, const ::gobgpapi::GetRibRequest* request, ::gobgpapi::GetRibResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetPath(::grpc::ServerContext* context, const ::gobgpapi::GetPathRequest* request, ::grpc::ServerWriter< ::gobgpapi::Path>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ValidateRib(::grpc::ServerContext* context, const ::gobgpapi::ValidateRibRequest* request, ::gobgpapi::ValidateRibResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddPath(::grpc::ServerContext* context, const ::gobgpapi::AddPathRequest* request, ::gobgpapi::AddPathResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeletePath(::grpc::ServerContext* context, const ::gobgpapi::DeletePathRequest* request, ::gobgpapi::DeletePathResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::MonitorRib(::grpc::ServerContext* context, const ::gobgpapi::MonitorRibRequest* request, ::grpc::ServerWriter< ::gobgpapi::Destination>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::MonitorPeerState(::grpc::ServerContext* context, const ::gobgpapi::Arguments* request, ::grpc::ServerWriter< ::gobgpapi::Peer>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::EnableMrt(::grpc::ServerContext* context, const ::gobgpapi::EnableMrtRequest* request, ::gobgpapi::EnableMrtResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DisableMrt(::grpc::ServerContext* context, const ::gobgpapi::DisableMrtRequest* request, ::gobgpapi::DisableMrtResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::InjectMrt(::grpc::ServerContext* context, ::grpc::ServerReader< ::gobgpapi::InjectMrtRequest>* reader, ::gobgpapi::InjectMrtResponse* response) {
  (void) context;
  (void) reader;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddBmp(::grpc::ServerContext* context, const ::gobgpapi::AddBmpRequest* request, ::gobgpapi::AddBmpResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeleteBmp(::grpc::ServerContext* context, const ::gobgpapi::DeleteBmpRequest* request, ::gobgpapi::DeleteBmpResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetRpki(::grpc::ServerContext* context, const ::gobgpapi::GetRpkiRequest* request, ::gobgpapi::GetRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddRpki(::grpc::ServerContext* context, const ::gobgpapi::AddRpkiRequest* request, ::gobgpapi::AddRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeleteRpki(::grpc::ServerContext* context, const ::gobgpapi::DeleteRpkiRequest* request, ::gobgpapi::DeleteRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::EnableRpki(::grpc::ServerContext* context, const ::gobgpapi::EnableRpkiRequest* request, ::gobgpapi::EnableRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DisableRpki(::grpc::ServerContext* context, const ::gobgpapi::DisableRpkiRequest* request, ::gobgpapi::DisableRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ResetRpki(::grpc::ServerContext* context, const ::gobgpapi::ResetRpkiRequest* request, ::gobgpapi::ResetRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::SoftResetRpki(::grpc::ServerContext* context, const ::gobgpapi::SoftResetRpkiRequest* request, ::gobgpapi::SoftResetRpkiResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetRoa(::grpc::ServerContext* context, const ::gobgpapi::GetRoaRequest* request, ::gobgpapi::GetRoaResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::EnableZebra(::grpc::ServerContext* context, const ::gobgpapi::EnableZebraRequest* request, ::gobgpapi::EnableZebraResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddVrf(::grpc::ServerContext* context, const ::gobgpapi::AddVrfRequest* request, ::gobgpapi::AddVrfResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeleteVrf(::grpc::ServerContext* context, const ::gobgpapi::DeleteVrfRequest* request, ::gobgpapi::DeleteVrfResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetVrf(::grpc::ServerContext* context, const ::gobgpapi::GetVrfRequest* request, ::gobgpapi::GetVrfResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::GetDefinedSetRequest* request, ::gobgpapi::GetDefinedSetResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::AddDefinedSetRequest* request, ::gobgpapi::AddDefinedSetResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeleteDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::DeleteDefinedSetRequest* request, ::gobgpapi::DeleteDefinedSetResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ReplaceDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::ReplaceDefinedSetRequest* request, ::gobgpapi::ReplaceDefinedSetResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetStatement(::grpc::ServerContext* context, const ::gobgpapi::GetStatementRequest* request, ::gobgpapi::GetStatementResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddStatement(::grpc::ServerContext* context, const ::gobgpapi::AddStatementRequest* request, ::gobgpapi::AddStatementResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeleteStatement(::grpc::ServerContext* context, const ::gobgpapi::DeleteStatementRequest* request, ::gobgpapi::DeleteStatementResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ReplaceStatement(::grpc::ServerContext* context, const ::gobgpapi::ReplaceStatementRequest* request, ::gobgpapi::ReplaceStatementResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetPolicy(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyRequest* request, ::gobgpapi::GetPolicyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddPolicy(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyRequest* request, ::gobgpapi::AddPolicyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeletePolicy(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyRequest* request, ::gobgpapi::DeletePolicyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ReplacePolicy(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyRequest* request, ::gobgpapi::ReplacePolicyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyAssignmentRequest* request, ::gobgpapi::GetPolicyAssignmentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::AddPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyAssignmentRequest* request, ::gobgpapi::AddPolicyAssignmentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::DeletePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest* request, ::gobgpapi::DeletePolicyAssignmentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::ReplacePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest* request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status GobgpApi::Service::GetRibInfo(::grpc::ServerContext* context, const ::gobgpapi::GetRibInfoRequest* request, ::gobgpapi::GetRibInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace gobgpapi

