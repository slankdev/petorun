// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: gobgp.proto
// Original file comments:
// Copyright (C) 2015-2017 Nippon Telegraph and Telephone Corporation.
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
#ifndef GRPC_gobgp_2eproto__INCLUDED
#define GRPC_gobgp_2eproto__INCLUDED

#include "gobgp.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace gobgpapi {

// Interface exported by the server.
//
class GobgpApi final {
 public:
  static constexpr char const* service_full_name() {
    return "gobgpapi.GobgpApi";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status StartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::gobgpapi::StartServerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StartServerResponse>> AsyncStartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StartServerResponse>>(AsyncStartServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StartServerResponse>> PrepareAsyncStartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StartServerResponse>>(PrepareAsyncStartServerRaw(context, request, cq));
    }
    virtual ::grpc::Status StopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::gobgpapi::StopServerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StopServerResponse>> AsyncStopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StopServerResponse>>(AsyncStopServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StopServerResponse>> PrepareAsyncStopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StopServerResponse>>(PrepareAsyncStopServerRaw(context, request, cq));
    }
    virtual ::grpc::Status GetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::gobgpapi::GetServerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetServerResponse>> AsyncGetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetServerResponse>>(AsyncGetServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetServerResponse>> PrepareAsyncGetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetServerResponse>>(PrepareAsyncGetServerRaw(context, request, cq));
    }
    virtual ::grpc::Status AddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::gobgpapi::AddNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddNeighborResponse>> AsyncAddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddNeighborResponse>>(AsyncAddNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddNeighborResponse>> PrepareAsyncAddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddNeighborResponse>>(PrepareAsyncAddNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::gobgpapi::DeleteNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteNeighborResponse>> AsyncDeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteNeighborResponse>>(AsyncDeleteNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteNeighborResponse>> PrepareAsyncDeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteNeighborResponse>>(PrepareAsyncDeleteNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::gobgpapi::GetNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetNeighborResponse>> AsyncGetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetNeighborResponse>>(AsyncGetNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetNeighborResponse>> PrepareAsyncGetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetNeighborResponse>>(PrepareAsyncGetNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status ResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::gobgpapi::ResetNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetNeighborResponse>> AsyncResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetNeighborResponse>>(AsyncResetNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetNeighborResponse>> PrepareAsyncResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetNeighborResponse>>(PrepareAsyncResetNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status SoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::gobgpapi::SoftResetNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetNeighborResponse>> AsyncSoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetNeighborResponse>>(AsyncSoftResetNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetNeighborResponse>> PrepareAsyncSoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetNeighborResponse>>(PrepareAsyncSoftResetNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status ShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::gobgpapi::ShutdownNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ShutdownNeighborResponse>> AsyncShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ShutdownNeighborResponse>>(AsyncShutdownNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ShutdownNeighborResponse>> PrepareAsyncShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ShutdownNeighborResponse>>(PrepareAsyncShutdownNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status EnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::gobgpapi::EnableNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableNeighborResponse>> AsyncEnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableNeighborResponse>>(AsyncEnableNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableNeighborResponse>> PrepareAsyncEnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableNeighborResponse>>(PrepareAsyncEnableNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status DisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::gobgpapi::DisableNeighborResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableNeighborResponse>> AsyncDisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableNeighborResponse>>(AsyncDisableNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableNeighborResponse>> PrepareAsyncDisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableNeighborResponse>>(PrepareAsyncDisableNeighborRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::gobgpapi::GetRibResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibResponse>> AsyncGetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibResponse>>(AsyncGetRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibResponse>> PrepareAsyncGetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibResponse>>(PrepareAsyncGetRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::gobgpapi::Path>> GetPath(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::gobgpapi::Path>>(GetPathRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Path>> AsyncGetPath(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Path>>(AsyncGetPathRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Path>> PrepareAsyncGetPath(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Path>>(PrepareAsyncGetPathRaw(context, request, cq));
    }
    virtual ::grpc::Status ValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::gobgpapi::ValidateRibResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ValidateRibResponse>> AsyncValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ValidateRibResponse>>(AsyncValidateRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ValidateRibResponse>> PrepareAsyncValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ValidateRibResponse>>(PrepareAsyncValidateRibRaw(context, request, cq));
    }
    virtual ::grpc::Status AddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::gobgpapi::AddPathResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPathResponse>> AsyncAddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPathResponse>>(AsyncAddPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPathResponse>> PrepareAsyncAddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPathResponse>>(PrepareAsyncAddPathRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::gobgpapi::DeletePathResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePathResponse>> AsyncDeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePathResponse>>(AsyncDeletePathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePathResponse>> PrepareAsyncDeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePathResponse>>(PrepareAsyncDeletePathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::gobgpapi::Destination>> MonitorRib(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::gobgpapi::Destination>>(MonitorRibRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Destination>> AsyncMonitorRib(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Destination>>(AsyncMonitorRibRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Destination>> PrepareAsyncMonitorRib(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Destination>>(PrepareAsyncMonitorRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::gobgpapi::Peer>> MonitorPeerState(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::gobgpapi::Peer>>(MonitorPeerStateRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Peer>> AsyncMonitorPeerState(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Peer>>(AsyncMonitorPeerStateRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Peer>> PrepareAsyncMonitorPeerState(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Peer>>(PrepareAsyncMonitorPeerStateRaw(context, request, cq));
    }
    virtual ::grpc::Status EnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::gobgpapi::EnableMrtResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableMrtResponse>> AsyncEnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableMrtResponse>>(AsyncEnableMrtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableMrtResponse>> PrepareAsyncEnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableMrtResponse>>(PrepareAsyncEnableMrtRaw(context, request, cq));
    }
    virtual ::grpc::Status DisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::gobgpapi::DisableMrtResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableMrtResponse>> AsyncDisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableMrtResponse>>(AsyncDisableMrtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableMrtResponse>> PrepareAsyncDisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableMrtResponse>>(PrepareAsyncDisableMrtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriterInterface< ::gobgpapi::InjectMrtRequest>> InjectMrt(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::gobgpapi::InjectMrtRequest>>(InjectMrtRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::gobgpapi::InjectMrtRequest>> AsyncInjectMrt(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::gobgpapi::InjectMrtRequest>>(AsyncInjectMrtRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::gobgpapi::InjectMrtRequest>> PrepareAsyncInjectMrt(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::gobgpapi::InjectMrtRequest>>(PrepareAsyncInjectMrtRaw(context, response, cq));
    }
    virtual ::grpc::Status AddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::gobgpapi::AddBmpResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddBmpResponse>> AsyncAddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddBmpResponse>>(AsyncAddBmpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddBmpResponse>> PrepareAsyncAddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddBmpResponse>>(PrepareAsyncAddBmpRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::gobgpapi::DeleteBmpResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteBmpResponse>> AsyncDeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteBmpResponse>>(AsyncDeleteBmpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteBmpResponse>> PrepareAsyncDeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteBmpResponse>>(PrepareAsyncDeleteBmpRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::gobgpapi::GetRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRpkiResponse>> AsyncGetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRpkiResponse>>(AsyncGetRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRpkiResponse>> PrepareAsyncGetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRpkiResponse>>(PrepareAsyncGetRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status AddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::gobgpapi::AddRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddRpkiResponse>> AsyncAddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddRpkiResponse>>(AsyncAddRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddRpkiResponse>> PrepareAsyncAddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddRpkiResponse>>(PrepareAsyncAddRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::gobgpapi::DeleteRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteRpkiResponse>> AsyncDeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteRpkiResponse>>(AsyncDeleteRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteRpkiResponse>> PrepareAsyncDeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteRpkiResponse>>(PrepareAsyncDeleteRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status EnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::gobgpapi::EnableRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableRpkiResponse>> AsyncEnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableRpkiResponse>>(AsyncEnableRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableRpkiResponse>> PrepareAsyncEnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableRpkiResponse>>(PrepareAsyncEnableRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status DisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::gobgpapi::DisableRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableRpkiResponse>> AsyncDisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableRpkiResponse>>(AsyncDisableRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableRpkiResponse>> PrepareAsyncDisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableRpkiResponse>>(PrepareAsyncDisableRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status ResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::gobgpapi::ResetRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetRpkiResponse>> AsyncResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetRpkiResponse>>(AsyncResetRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetRpkiResponse>> PrepareAsyncResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetRpkiResponse>>(PrepareAsyncResetRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status SoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::gobgpapi::SoftResetRpkiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetRpkiResponse>> AsyncSoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetRpkiResponse>>(AsyncSoftResetRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetRpkiResponse>> PrepareAsyncSoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetRpkiResponse>>(PrepareAsyncSoftResetRpkiRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::gobgpapi::GetRoaResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRoaResponse>> AsyncGetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRoaResponse>>(AsyncGetRoaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRoaResponse>> PrepareAsyncGetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRoaResponse>>(PrepareAsyncGetRoaRaw(context, request, cq));
    }
    virtual ::grpc::Status EnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::gobgpapi::EnableZebraResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableZebraResponse>> AsyncEnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableZebraResponse>>(AsyncEnableZebraRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableZebraResponse>> PrepareAsyncEnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableZebraResponse>>(PrepareAsyncEnableZebraRaw(context, request, cq));
    }
    virtual ::grpc::Status AddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::gobgpapi::AddVrfResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddVrfResponse>> AsyncAddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddVrfResponse>>(AsyncAddVrfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddVrfResponse>> PrepareAsyncAddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddVrfResponse>>(PrepareAsyncAddVrfRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::gobgpapi::DeleteVrfResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteVrfResponse>> AsyncDeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteVrfResponse>>(AsyncDeleteVrfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteVrfResponse>> PrepareAsyncDeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteVrfResponse>>(PrepareAsyncDeleteVrfRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::gobgpapi::GetVrfResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetVrfResponse>> AsyncGetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetVrfResponse>>(AsyncGetVrfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetVrfResponse>> PrepareAsyncGetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetVrfResponse>>(PrepareAsyncGetVrfRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::gobgpapi::GetDefinedSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetDefinedSetResponse>> AsyncGetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetDefinedSetResponse>>(AsyncGetDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetDefinedSetResponse>> PrepareAsyncGetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetDefinedSetResponse>>(PrepareAsyncGetDefinedSetRaw(context, request, cq));
    }
    virtual ::grpc::Status AddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::gobgpapi::AddDefinedSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddDefinedSetResponse>> AsyncAddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddDefinedSetResponse>>(AsyncAddDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddDefinedSetResponse>> PrepareAsyncAddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddDefinedSetResponse>>(PrepareAsyncAddDefinedSetRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::gobgpapi::DeleteDefinedSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteDefinedSetResponse>> AsyncDeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteDefinedSetResponse>>(AsyncDeleteDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteDefinedSetResponse>> PrepareAsyncDeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteDefinedSetResponse>>(PrepareAsyncDeleteDefinedSetRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::gobgpapi::ReplaceDefinedSetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceDefinedSetResponse>> AsyncReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceDefinedSetResponse>>(AsyncReplaceDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceDefinedSetResponse>> PrepareAsyncReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceDefinedSetResponse>>(PrepareAsyncReplaceDefinedSetRaw(context, request, cq));
    }
    virtual ::grpc::Status GetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::gobgpapi::GetStatementResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetStatementResponse>> AsyncGetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetStatementResponse>>(AsyncGetStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetStatementResponse>> PrepareAsyncGetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetStatementResponse>>(PrepareAsyncGetStatementRaw(context, request, cq));
    }
    virtual ::grpc::Status AddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::gobgpapi::AddStatementResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddStatementResponse>> AsyncAddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddStatementResponse>>(AsyncAddStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddStatementResponse>> PrepareAsyncAddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddStatementResponse>>(PrepareAsyncAddStatementRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::gobgpapi::DeleteStatementResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteStatementResponse>> AsyncDeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteStatementResponse>>(AsyncDeleteStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteStatementResponse>> PrepareAsyncDeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteStatementResponse>>(PrepareAsyncDeleteStatementRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::gobgpapi::ReplaceStatementResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceStatementResponse>> AsyncReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceStatementResponse>>(AsyncReplaceStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceStatementResponse>> PrepareAsyncReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceStatementResponse>>(PrepareAsyncReplaceStatementRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::gobgpapi::GetPolicyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyResponse>> AsyncGetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyResponse>>(AsyncGetPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyResponse>> PrepareAsyncGetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyResponse>>(PrepareAsyncGetPolicyRaw(context, request, cq));
    }
    virtual ::grpc::Status AddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::gobgpapi::AddPolicyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyResponse>> AsyncAddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyResponse>>(AsyncAddPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyResponse>> PrepareAsyncAddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyResponse>>(PrepareAsyncAddPolicyRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::gobgpapi::DeletePolicyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyResponse>> AsyncDeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyResponse>>(AsyncDeletePolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyResponse>> PrepareAsyncDeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyResponse>>(PrepareAsyncDeletePolicyRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::gobgpapi::ReplacePolicyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyResponse>> AsyncReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyResponse>>(AsyncReplacePolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyResponse>> PrepareAsyncReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyResponse>>(PrepareAsyncReplacePolicyRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::gobgpapi::GetPolicyAssignmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyAssignmentResponse>> AsyncGetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyAssignmentResponse>>(AsyncGetPolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyAssignmentResponse>> PrepareAsyncGetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyAssignmentResponse>>(PrepareAsyncGetPolicyAssignmentRaw(context, request, cq));
    }
    virtual ::grpc::Status AddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::gobgpapi::AddPolicyAssignmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyAssignmentResponse>> AsyncAddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyAssignmentResponse>>(AsyncAddPolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyAssignmentResponse>> PrepareAsyncAddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyAssignmentResponse>>(PrepareAsyncAddPolicyAssignmentRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::gobgpapi::DeletePolicyAssignmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyAssignmentResponse>> AsyncDeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyAssignmentResponse>>(AsyncDeletePolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyAssignmentResponse>> PrepareAsyncDeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyAssignmentResponse>>(PrepareAsyncDeletePolicyAssignmentRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyAssignmentResponse>> AsyncReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyAssignmentResponse>>(AsyncReplacePolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyAssignmentResponse>> PrepareAsyncReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyAssignmentResponse>>(PrepareAsyncReplacePolicyAssignmentRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::gobgpapi::GetRibInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibInfoResponse>> AsyncGetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibInfoResponse>>(AsyncGetRibInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibInfoResponse>> PrepareAsyncGetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibInfoResponse>>(PrepareAsyncGetRibInfoRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StartServerResponse>* AsyncStartServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StartServerResponse>* PrepareAsyncStartServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StopServerResponse>* AsyncStopServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::StopServerResponse>* PrepareAsyncStopServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetServerResponse>* AsyncGetServerRaw(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetServerResponse>* PrepareAsyncGetServerRaw(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddNeighborResponse>* AsyncAddNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddNeighborResponse>* PrepareAsyncAddNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteNeighborResponse>* AsyncDeleteNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteNeighborResponse>* PrepareAsyncDeleteNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetNeighborResponse>* AsyncGetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetNeighborResponse>* PrepareAsyncGetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetNeighborResponse>* AsyncResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetNeighborResponse>* PrepareAsyncResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetNeighborResponse>* AsyncSoftResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetNeighborResponse>* PrepareAsyncSoftResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ShutdownNeighborResponse>* AsyncShutdownNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ShutdownNeighborResponse>* PrepareAsyncShutdownNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableNeighborResponse>* AsyncEnableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableNeighborResponse>* PrepareAsyncEnableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableNeighborResponse>* AsyncDisableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableNeighborResponse>* PrepareAsyncDisableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibResponse>* AsyncGetRibRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibResponse>* PrepareAsyncGetRibRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::gobgpapi::Path>* GetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Path>* AsyncGetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Path>* PrepareAsyncGetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ValidateRibResponse>* AsyncValidateRibRaw(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ValidateRibResponse>* PrepareAsyncValidateRibRaw(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPathResponse>* AsyncAddPathRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPathResponse>* PrepareAsyncAddPathRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePathResponse>* AsyncDeletePathRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePathResponse>* PrepareAsyncDeletePathRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::gobgpapi::Destination>* MonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Destination>* AsyncMonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Destination>* PrepareAsyncMonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::gobgpapi::Peer>* MonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Peer>* AsyncMonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::gobgpapi::Peer>* PrepareAsyncMonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableMrtResponse>* AsyncEnableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableMrtResponse>* PrepareAsyncEnableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableMrtResponse>* AsyncDisableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableMrtResponse>* PrepareAsyncDisableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::gobgpapi::InjectMrtRequest>* InjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::gobgpapi::InjectMrtRequest>* AsyncInjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::gobgpapi::InjectMrtRequest>* PrepareAsyncInjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddBmpResponse>* AsyncAddBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddBmpResponse>* PrepareAsyncAddBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteBmpResponse>* AsyncDeleteBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteBmpResponse>* PrepareAsyncDeleteBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRpkiResponse>* AsyncGetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRpkiResponse>* PrepareAsyncGetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddRpkiResponse>* AsyncAddRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddRpkiResponse>* PrepareAsyncAddRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteRpkiResponse>* AsyncDeleteRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteRpkiResponse>* PrepareAsyncDeleteRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableRpkiResponse>* AsyncEnableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableRpkiResponse>* PrepareAsyncEnableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableRpkiResponse>* AsyncDisableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DisableRpkiResponse>* PrepareAsyncDisableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetRpkiResponse>* AsyncResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ResetRpkiResponse>* PrepareAsyncResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetRpkiResponse>* AsyncSoftResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::SoftResetRpkiResponse>* PrepareAsyncSoftResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRoaResponse>* AsyncGetRoaRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRoaResponse>* PrepareAsyncGetRoaRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableZebraResponse>* AsyncEnableZebraRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::EnableZebraResponse>* PrepareAsyncEnableZebraRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddVrfResponse>* AsyncAddVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddVrfResponse>* PrepareAsyncAddVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteVrfResponse>* AsyncDeleteVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteVrfResponse>* PrepareAsyncDeleteVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetVrfResponse>* AsyncGetVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetVrfResponse>* PrepareAsyncGetVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetDefinedSetResponse>* AsyncGetDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetDefinedSetResponse>* PrepareAsyncGetDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddDefinedSetResponse>* AsyncAddDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddDefinedSetResponse>* PrepareAsyncAddDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteDefinedSetResponse>* AsyncDeleteDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteDefinedSetResponse>* PrepareAsyncDeleteDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceDefinedSetResponse>* AsyncReplaceDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceDefinedSetResponse>* PrepareAsyncReplaceDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetStatementResponse>* AsyncGetStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetStatementResponse>* PrepareAsyncGetStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddStatementResponse>* AsyncAddStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddStatementResponse>* PrepareAsyncAddStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteStatementResponse>* AsyncDeleteStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeleteStatementResponse>* PrepareAsyncDeleteStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceStatementResponse>* AsyncReplaceStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplaceStatementResponse>* PrepareAsyncReplaceStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyResponse>* AsyncGetPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyResponse>* PrepareAsyncGetPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyResponse>* AsyncAddPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyResponse>* PrepareAsyncAddPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyResponse>* AsyncDeletePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyResponse>* PrepareAsyncDeletePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyResponse>* AsyncReplacePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyResponse>* PrepareAsyncReplacePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyAssignmentResponse>* AsyncGetPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetPolicyAssignmentResponse>* PrepareAsyncGetPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyAssignmentResponse>* AsyncAddPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::AddPolicyAssignmentResponse>* PrepareAsyncAddPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyAssignmentResponse>* AsyncDeletePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::DeletePolicyAssignmentResponse>* PrepareAsyncDeletePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyAssignmentResponse>* AsyncReplacePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::ReplacePolicyAssignmentResponse>* PrepareAsyncReplacePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibInfoResponse>* AsyncGetRibInfoRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::gobgpapi::GetRibInfoResponse>* PrepareAsyncGetRibInfoRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status StartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::gobgpapi::StartServerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>> AsyncStartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>>(AsyncStartServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>> PrepareAsyncStartServer(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>>(PrepareAsyncStartServerRaw(context, request, cq));
    }
    ::grpc::Status StopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::gobgpapi::StopServerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>> AsyncStopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>>(AsyncStopServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>> PrepareAsyncStopServer(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>>(PrepareAsyncStopServerRaw(context, request, cq));
    }
    ::grpc::Status GetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::gobgpapi::GetServerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>> AsyncGetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>>(AsyncGetServerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>> PrepareAsyncGetServer(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>>(PrepareAsyncGetServerRaw(context, request, cq));
    }
    ::grpc::Status AddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::gobgpapi::AddNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>> AsyncAddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>>(AsyncAddNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>> PrepareAsyncAddNeighbor(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>>(PrepareAsyncAddNeighborRaw(context, request, cq));
    }
    ::grpc::Status DeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::gobgpapi::DeleteNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>> AsyncDeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>>(AsyncDeleteNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>> PrepareAsyncDeleteNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>>(PrepareAsyncDeleteNeighborRaw(context, request, cq));
    }
    ::grpc::Status GetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::gobgpapi::GetNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>> AsyncGetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>>(AsyncGetNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>> PrepareAsyncGetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>>(PrepareAsyncGetNeighborRaw(context, request, cq));
    }
    ::grpc::Status ResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::gobgpapi::ResetNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>> AsyncResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>>(AsyncResetNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>> PrepareAsyncResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>>(PrepareAsyncResetNeighborRaw(context, request, cq));
    }
    ::grpc::Status SoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::gobgpapi::SoftResetNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>> AsyncSoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>>(AsyncSoftResetNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>> PrepareAsyncSoftResetNeighbor(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>>(PrepareAsyncSoftResetNeighborRaw(context, request, cq));
    }
    ::grpc::Status ShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::gobgpapi::ShutdownNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>> AsyncShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>>(AsyncShutdownNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>> PrepareAsyncShutdownNeighbor(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>>(PrepareAsyncShutdownNeighborRaw(context, request, cq));
    }
    ::grpc::Status EnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::gobgpapi::EnableNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>> AsyncEnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>>(AsyncEnableNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>> PrepareAsyncEnableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>>(PrepareAsyncEnableNeighborRaw(context, request, cq));
    }
    ::grpc::Status DisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::gobgpapi::DisableNeighborResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>> AsyncDisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>>(AsyncDisableNeighborRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>> PrepareAsyncDisableNeighbor(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>>(PrepareAsyncDisableNeighborRaw(context, request, cq));
    }
    ::grpc::Status GetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::gobgpapi::GetRibResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>> AsyncGetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>>(AsyncGetRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>> PrepareAsyncGetRib(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>>(PrepareAsyncGetRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::gobgpapi::Path>> GetPath(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::gobgpapi::Path>>(GetPathRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Path>> AsyncGetPath(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Path>>(AsyncGetPathRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Path>> PrepareAsyncGetPath(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Path>>(PrepareAsyncGetPathRaw(context, request, cq));
    }
    ::grpc::Status ValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::gobgpapi::ValidateRibResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>> AsyncValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>>(AsyncValidateRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>> PrepareAsyncValidateRib(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>>(PrepareAsyncValidateRibRaw(context, request, cq));
    }
    ::grpc::Status AddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::gobgpapi::AddPathResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>> AsyncAddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>>(AsyncAddPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>> PrepareAsyncAddPath(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>>(PrepareAsyncAddPathRaw(context, request, cq));
    }
    ::grpc::Status DeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::gobgpapi::DeletePathResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>> AsyncDeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>>(AsyncDeletePathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>> PrepareAsyncDeletePath(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>>(PrepareAsyncDeletePathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::gobgpapi::Destination>> MonitorRib(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::gobgpapi::Destination>>(MonitorRibRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Destination>> AsyncMonitorRib(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Destination>>(AsyncMonitorRibRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Destination>> PrepareAsyncMonitorRib(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Destination>>(PrepareAsyncMonitorRibRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::gobgpapi::Peer>> MonitorPeerState(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::gobgpapi::Peer>>(MonitorPeerStateRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Peer>> AsyncMonitorPeerState(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Peer>>(AsyncMonitorPeerStateRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Peer>> PrepareAsyncMonitorPeerState(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::gobgpapi::Peer>>(PrepareAsyncMonitorPeerStateRaw(context, request, cq));
    }
    ::grpc::Status EnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::gobgpapi::EnableMrtResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>> AsyncEnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>>(AsyncEnableMrtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>> PrepareAsyncEnableMrt(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>>(PrepareAsyncEnableMrtRaw(context, request, cq));
    }
    ::grpc::Status DisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::gobgpapi::DisableMrtResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>> AsyncDisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>>(AsyncDisableMrtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>> PrepareAsyncDisableMrt(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>>(PrepareAsyncDisableMrtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::gobgpapi::InjectMrtRequest>> InjectMrt(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::gobgpapi::InjectMrtRequest>>(InjectMrtRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>> AsyncInjectMrt(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>>(AsyncInjectMrtRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>> PrepareAsyncInjectMrt(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>>(PrepareAsyncInjectMrtRaw(context, response, cq));
    }
    ::grpc::Status AddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::gobgpapi::AddBmpResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>> AsyncAddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>>(AsyncAddBmpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>> PrepareAsyncAddBmp(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>>(PrepareAsyncAddBmpRaw(context, request, cq));
    }
    ::grpc::Status DeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::gobgpapi::DeleteBmpResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>> AsyncDeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>>(AsyncDeleteBmpRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>> PrepareAsyncDeleteBmp(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>>(PrepareAsyncDeleteBmpRaw(context, request, cq));
    }
    ::grpc::Status GetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::gobgpapi::GetRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>> AsyncGetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>>(AsyncGetRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>> PrepareAsyncGetRpki(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>>(PrepareAsyncGetRpkiRaw(context, request, cq));
    }
    ::grpc::Status AddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::gobgpapi::AddRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>> AsyncAddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>>(AsyncAddRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>> PrepareAsyncAddRpki(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>>(PrepareAsyncAddRpkiRaw(context, request, cq));
    }
    ::grpc::Status DeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::gobgpapi::DeleteRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>> AsyncDeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>>(AsyncDeleteRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>> PrepareAsyncDeleteRpki(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>>(PrepareAsyncDeleteRpkiRaw(context, request, cq));
    }
    ::grpc::Status EnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::gobgpapi::EnableRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>> AsyncEnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>>(AsyncEnableRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>> PrepareAsyncEnableRpki(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>>(PrepareAsyncEnableRpkiRaw(context, request, cq));
    }
    ::grpc::Status DisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::gobgpapi::DisableRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>> AsyncDisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>>(AsyncDisableRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>> PrepareAsyncDisableRpki(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>>(PrepareAsyncDisableRpkiRaw(context, request, cq));
    }
    ::grpc::Status ResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::gobgpapi::ResetRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>> AsyncResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>>(AsyncResetRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>> PrepareAsyncResetRpki(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>>(PrepareAsyncResetRpkiRaw(context, request, cq));
    }
    ::grpc::Status SoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::gobgpapi::SoftResetRpkiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>> AsyncSoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>>(AsyncSoftResetRpkiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>> PrepareAsyncSoftResetRpki(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>>(PrepareAsyncSoftResetRpkiRaw(context, request, cq));
    }
    ::grpc::Status GetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::gobgpapi::GetRoaResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>> AsyncGetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>>(AsyncGetRoaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>> PrepareAsyncGetRoa(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>>(PrepareAsyncGetRoaRaw(context, request, cq));
    }
    ::grpc::Status EnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::gobgpapi::EnableZebraResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>> AsyncEnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>>(AsyncEnableZebraRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>> PrepareAsyncEnableZebra(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>>(PrepareAsyncEnableZebraRaw(context, request, cq));
    }
    ::grpc::Status AddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::gobgpapi::AddVrfResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>> AsyncAddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>>(AsyncAddVrfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>> PrepareAsyncAddVrf(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>>(PrepareAsyncAddVrfRaw(context, request, cq));
    }
    ::grpc::Status DeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::gobgpapi::DeleteVrfResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>> AsyncDeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>>(AsyncDeleteVrfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>> PrepareAsyncDeleteVrf(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>>(PrepareAsyncDeleteVrfRaw(context, request, cq));
    }
    ::grpc::Status GetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::gobgpapi::GetVrfResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>> AsyncGetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>>(AsyncGetVrfRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>> PrepareAsyncGetVrf(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>>(PrepareAsyncGetVrfRaw(context, request, cq));
    }
    ::grpc::Status GetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::gobgpapi::GetDefinedSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>> AsyncGetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>>(AsyncGetDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>> PrepareAsyncGetDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>>(PrepareAsyncGetDefinedSetRaw(context, request, cq));
    }
    ::grpc::Status AddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::gobgpapi::AddDefinedSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>> AsyncAddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>>(AsyncAddDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>> PrepareAsyncAddDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>>(PrepareAsyncAddDefinedSetRaw(context, request, cq));
    }
    ::grpc::Status DeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::gobgpapi::DeleteDefinedSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>> AsyncDeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>>(AsyncDeleteDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>> PrepareAsyncDeleteDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>>(PrepareAsyncDeleteDefinedSetRaw(context, request, cq));
    }
    ::grpc::Status ReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::gobgpapi::ReplaceDefinedSetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>> AsyncReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>>(AsyncReplaceDefinedSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>> PrepareAsyncReplaceDefinedSet(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>>(PrepareAsyncReplaceDefinedSetRaw(context, request, cq));
    }
    ::grpc::Status GetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::gobgpapi::GetStatementResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>> AsyncGetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>>(AsyncGetStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>> PrepareAsyncGetStatement(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>>(PrepareAsyncGetStatementRaw(context, request, cq));
    }
    ::grpc::Status AddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::gobgpapi::AddStatementResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>> AsyncAddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>>(AsyncAddStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>> PrepareAsyncAddStatement(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>>(PrepareAsyncAddStatementRaw(context, request, cq));
    }
    ::grpc::Status DeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::gobgpapi::DeleteStatementResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>> AsyncDeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>>(AsyncDeleteStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>> PrepareAsyncDeleteStatement(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>>(PrepareAsyncDeleteStatementRaw(context, request, cq));
    }
    ::grpc::Status ReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::gobgpapi::ReplaceStatementResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>> AsyncReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>>(AsyncReplaceStatementRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>> PrepareAsyncReplaceStatement(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>>(PrepareAsyncReplaceStatementRaw(context, request, cq));
    }
    ::grpc::Status GetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::gobgpapi::GetPolicyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>> AsyncGetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>>(AsyncGetPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>> PrepareAsyncGetPolicy(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>>(PrepareAsyncGetPolicyRaw(context, request, cq));
    }
    ::grpc::Status AddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::gobgpapi::AddPolicyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>> AsyncAddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>>(AsyncAddPolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>> PrepareAsyncAddPolicy(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>>(PrepareAsyncAddPolicyRaw(context, request, cq));
    }
    ::grpc::Status DeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::gobgpapi::DeletePolicyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>> AsyncDeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>>(AsyncDeletePolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>> PrepareAsyncDeletePolicy(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>>(PrepareAsyncDeletePolicyRaw(context, request, cq));
    }
    ::grpc::Status ReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::gobgpapi::ReplacePolicyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>> AsyncReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>>(AsyncReplacePolicyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>> PrepareAsyncReplacePolicy(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>>(PrepareAsyncReplacePolicyRaw(context, request, cq));
    }
    ::grpc::Status GetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::gobgpapi::GetPolicyAssignmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>> AsyncGetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>>(AsyncGetPolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>> PrepareAsyncGetPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>>(PrepareAsyncGetPolicyAssignmentRaw(context, request, cq));
    }
    ::grpc::Status AddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::gobgpapi::AddPolicyAssignmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>> AsyncAddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>>(AsyncAddPolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>> PrepareAsyncAddPolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>>(PrepareAsyncAddPolicyAssignmentRaw(context, request, cq));
    }
    ::grpc::Status DeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::gobgpapi::DeletePolicyAssignmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>> AsyncDeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>>(AsyncDeletePolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>> PrepareAsyncDeletePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>>(PrepareAsyncDeletePolicyAssignmentRaw(context, request, cq));
    }
    ::grpc::Status ReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>> AsyncReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>>(AsyncReplacePolicyAssignmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>> PrepareAsyncReplacePolicyAssignment(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>>(PrepareAsyncReplacePolicyAssignmentRaw(context, request, cq));
    }
    ::grpc::Status GetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::gobgpapi::GetRibInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>> AsyncGetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>>(AsyncGetRibInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>> PrepareAsyncGetRibInfo(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>>(PrepareAsyncGetRibInfoRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>* AsyncStartServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::StartServerResponse>* PrepareAsyncStartServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StartServerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>* AsyncStopServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::StopServerResponse>* PrepareAsyncStopServerRaw(::grpc::ClientContext* context, const ::gobgpapi::StopServerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>* AsyncGetServerRaw(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetServerResponse>* PrepareAsyncGetServerRaw(::grpc::ClientContext* context, const ::gobgpapi::GetServerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>* AsyncAddNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddNeighborResponse>* PrepareAsyncAddNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::AddNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>* AsyncDeleteNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteNeighborResponse>* PrepareAsyncDeleteNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>* AsyncGetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetNeighborResponse>* PrepareAsyncGetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::GetNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>* AsyncResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetNeighborResponse>* PrepareAsyncResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>* AsyncSoftResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetNeighborResponse>* PrepareAsyncSoftResetNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>* AsyncShutdownNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ShutdownNeighborResponse>* PrepareAsyncShutdownNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::ShutdownNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>* AsyncEnableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableNeighborResponse>* PrepareAsyncEnableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>* AsyncDisableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableNeighborResponse>* PrepareAsyncDisableNeighborRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableNeighborRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>* AsyncGetRibRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibResponse>* PrepareAsyncGetRibRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::gobgpapi::Path>* GetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request) override;
    ::grpc::ClientAsyncReader< ::gobgpapi::Path>* AsyncGetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::gobgpapi::Path>* PrepareAsyncGetPathRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>* AsyncValidateRibRaw(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ValidateRibResponse>* PrepareAsyncValidateRibRaw(::grpc::ClientContext* context, const ::gobgpapi::ValidateRibRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>* AsyncAddPathRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPathResponse>* PrepareAsyncAddPathRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>* AsyncDeletePathRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePathResponse>* PrepareAsyncDeletePathRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::gobgpapi::Destination>* MonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request) override;
    ::grpc::ClientAsyncReader< ::gobgpapi::Destination>* AsyncMonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::gobgpapi::Destination>* PrepareAsyncMonitorRibRaw(::grpc::ClientContext* context, const ::gobgpapi::MonitorRibRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::gobgpapi::Peer>* MonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request) override;
    ::grpc::ClientAsyncReader< ::gobgpapi::Peer>* AsyncMonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::gobgpapi::Peer>* PrepareAsyncMonitorPeerStateRaw(::grpc::ClientContext* context, const ::gobgpapi::Arguments& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>* AsyncEnableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableMrtResponse>* PrepareAsyncEnableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableMrtRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>* AsyncDisableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableMrtResponse>* PrepareAsyncDisableMrtRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableMrtRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::gobgpapi::InjectMrtRequest>* InjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response) override;
    ::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>* AsyncInjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::gobgpapi::InjectMrtRequest>* PrepareAsyncInjectMrtRaw(::grpc::ClientContext* context, ::gobgpapi::InjectMrtResponse* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>* AsyncAddBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddBmpResponse>* PrepareAsyncAddBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::AddBmpRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>* AsyncDeleteBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteBmpResponse>* PrepareAsyncDeleteBmpRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteBmpRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>* AsyncGetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRpkiResponse>* PrepareAsyncGetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>* AsyncAddRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddRpkiResponse>* PrepareAsyncAddRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::AddRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>* AsyncDeleteRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteRpkiResponse>* PrepareAsyncDeleteRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>* AsyncEnableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableRpkiResponse>* PrepareAsyncEnableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>* AsyncDisableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DisableRpkiResponse>* PrepareAsyncDisableRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::DisableRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>* AsyncResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ResetRpkiResponse>* PrepareAsyncResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::ResetRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>* AsyncSoftResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::SoftResetRpkiResponse>* PrepareAsyncSoftResetRpkiRaw(::grpc::ClientContext* context, const ::gobgpapi::SoftResetRpkiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>* AsyncGetRoaRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRoaResponse>* PrepareAsyncGetRoaRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRoaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>* AsyncEnableZebraRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::EnableZebraResponse>* PrepareAsyncEnableZebraRaw(::grpc::ClientContext* context, const ::gobgpapi::EnableZebraRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>* AsyncAddVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddVrfResponse>* PrepareAsyncAddVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::AddVrfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>* AsyncDeleteVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteVrfResponse>* PrepareAsyncDeleteVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteVrfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>* AsyncGetVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetVrfResponse>* PrepareAsyncGetVrfRaw(::grpc::ClientContext* context, const ::gobgpapi::GetVrfRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>* AsyncGetDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetDefinedSetResponse>* PrepareAsyncGetDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::GetDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>* AsyncAddDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddDefinedSetResponse>* PrepareAsyncAddDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::AddDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>* AsyncDeleteDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteDefinedSetResponse>* PrepareAsyncDeleteDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>* AsyncReplaceDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceDefinedSetResponse>* PrepareAsyncReplaceDefinedSetRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceDefinedSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>* AsyncGetStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetStatementResponse>* PrepareAsyncGetStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::GetStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>* AsyncAddStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddStatementResponse>* PrepareAsyncAddStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::AddStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>* AsyncDeleteStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeleteStatementResponse>* PrepareAsyncDeleteStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::DeleteStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>* AsyncReplaceStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplaceStatementResponse>* PrepareAsyncReplaceStatementRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplaceStatementRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>* AsyncGetPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyResponse>* PrepareAsyncGetPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>* AsyncAddPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyResponse>* PrepareAsyncAddPolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>* AsyncDeletePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyResponse>* PrepareAsyncDeletePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>* AsyncReplacePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyResponse>* PrepareAsyncReplacePolicyRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>* AsyncGetPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetPolicyAssignmentResponse>* PrepareAsyncGetPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::GetPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>* AsyncAddPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::AddPolicyAssignmentResponse>* PrepareAsyncAddPolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::AddPolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>* AsyncDeletePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::DeletePolicyAssignmentResponse>* PrepareAsyncDeletePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>* AsyncReplacePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::ReplacePolicyAssignmentResponse>* PrepareAsyncReplacePolicyAssignmentRaw(::grpc::ClientContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>* AsyncGetRibInfoRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::gobgpapi::GetRibInfoResponse>* PrepareAsyncGetRibInfoRaw(::grpc::ClientContext* context, const ::gobgpapi::GetRibInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_StartServer_;
    const ::grpc::internal::RpcMethod rpcmethod_StopServer_;
    const ::grpc::internal::RpcMethod rpcmethod_GetServer_;
    const ::grpc::internal::RpcMethod rpcmethod_AddNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_SoftResetNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_ShutdownNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_EnableNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_DisableNeighbor_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRib_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPath_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateRib_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPath_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePath_;
    const ::grpc::internal::RpcMethod rpcmethod_MonitorRib_;
    const ::grpc::internal::RpcMethod rpcmethod_MonitorPeerState_;
    const ::grpc::internal::RpcMethod rpcmethod_EnableMrt_;
    const ::grpc::internal::RpcMethod rpcmethod_DisableMrt_;
    const ::grpc::internal::RpcMethod rpcmethod_InjectMrt_;
    const ::grpc::internal::RpcMethod rpcmethod_AddBmp_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBmp_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_AddRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_EnableRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_DisableRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_SoftResetRpki_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoa_;
    const ::grpc::internal::RpcMethod rpcmethod_EnableZebra_;
    const ::grpc::internal::RpcMethod rpcmethod_AddVrf_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteVrf_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVrf_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDefinedSet_;
    const ::grpc::internal::RpcMethod rpcmethod_AddDefinedSet_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDefinedSet_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplaceDefinedSet_;
    const ::grpc::internal::RpcMethod rpcmethod_GetStatement_;
    const ::grpc::internal::RpcMethod rpcmethod_AddStatement_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteStatement_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplaceStatement_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplacePolicy_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPolicyAssignment_;
    const ::grpc::internal::RpcMethod rpcmethod_AddPolicyAssignment_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePolicyAssignment_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplacePolicyAssignment_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRibInfo_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status StartServer(::grpc::ServerContext* context, const ::gobgpapi::StartServerRequest* request, ::gobgpapi::StartServerResponse* response);
    virtual ::grpc::Status StopServer(::grpc::ServerContext* context, const ::gobgpapi::StopServerRequest* request, ::gobgpapi::StopServerResponse* response);
    virtual ::grpc::Status GetServer(::grpc::ServerContext* context, const ::gobgpapi::GetServerRequest* request, ::gobgpapi::GetServerResponse* response);
    virtual ::grpc::Status AddNeighbor(::grpc::ServerContext* context, const ::gobgpapi::AddNeighborRequest* request, ::gobgpapi::AddNeighborResponse* response);
    virtual ::grpc::Status DeleteNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DeleteNeighborRequest* request, ::gobgpapi::DeleteNeighborResponse* response);
    virtual ::grpc::Status GetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::GetNeighborRequest* request, ::gobgpapi::GetNeighborResponse* response);
    virtual ::grpc::Status ResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ResetNeighborRequest* request, ::gobgpapi::ResetNeighborResponse* response);
    virtual ::grpc::Status SoftResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::SoftResetNeighborRequest* request, ::gobgpapi::SoftResetNeighborResponse* response);
    virtual ::grpc::Status ShutdownNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ShutdownNeighborRequest* request, ::gobgpapi::ShutdownNeighborResponse* response);
    virtual ::grpc::Status EnableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::EnableNeighborRequest* request, ::gobgpapi::EnableNeighborResponse* response);
    virtual ::grpc::Status DisableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DisableNeighborRequest* request, ::gobgpapi::DisableNeighborResponse* response);
    virtual ::grpc::Status GetRib(::grpc::ServerContext* context, const ::gobgpapi::GetRibRequest* request, ::gobgpapi::GetRibResponse* response);
    virtual ::grpc::Status GetPath(::grpc::ServerContext* context, const ::gobgpapi::GetPathRequest* request, ::grpc::ServerWriter< ::gobgpapi::Path>* writer);
    virtual ::grpc::Status ValidateRib(::grpc::ServerContext* context, const ::gobgpapi::ValidateRibRequest* request, ::gobgpapi::ValidateRibResponse* response);
    virtual ::grpc::Status AddPath(::grpc::ServerContext* context, const ::gobgpapi::AddPathRequest* request, ::gobgpapi::AddPathResponse* response);
    virtual ::grpc::Status DeletePath(::grpc::ServerContext* context, const ::gobgpapi::DeletePathRequest* request, ::gobgpapi::DeletePathResponse* response);
    virtual ::grpc::Status MonitorRib(::grpc::ServerContext* context, const ::gobgpapi::MonitorRibRequest* request, ::grpc::ServerWriter< ::gobgpapi::Destination>* writer);
    virtual ::grpc::Status MonitorPeerState(::grpc::ServerContext* context, const ::gobgpapi::Arguments* request, ::grpc::ServerWriter< ::gobgpapi::Peer>* writer);
    virtual ::grpc::Status EnableMrt(::grpc::ServerContext* context, const ::gobgpapi::EnableMrtRequest* request, ::gobgpapi::EnableMrtResponse* response);
    virtual ::grpc::Status DisableMrt(::grpc::ServerContext* context, const ::gobgpapi::DisableMrtRequest* request, ::gobgpapi::DisableMrtResponse* response);
    virtual ::grpc::Status InjectMrt(::grpc::ServerContext* context, ::grpc::ServerReader< ::gobgpapi::InjectMrtRequest>* reader, ::gobgpapi::InjectMrtResponse* response);
    virtual ::grpc::Status AddBmp(::grpc::ServerContext* context, const ::gobgpapi::AddBmpRequest* request, ::gobgpapi::AddBmpResponse* response);
    virtual ::grpc::Status DeleteBmp(::grpc::ServerContext* context, const ::gobgpapi::DeleteBmpRequest* request, ::gobgpapi::DeleteBmpResponse* response);
    virtual ::grpc::Status GetRpki(::grpc::ServerContext* context, const ::gobgpapi::GetRpkiRequest* request, ::gobgpapi::GetRpkiResponse* response);
    virtual ::grpc::Status AddRpki(::grpc::ServerContext* context, const ::gobgpapi::AddRpkiRequest* request, ::gobgpapi::AddRpkiResponse* response);
    virtual ::grpc::Status DeleteRpki(::grpc::ServerContext* context, const ::gobgpapi::DeleteRpkiRequest* request, ::gobgpapi::DeleteRpkiResponse* response);
    virtual ::grpc::Status EnableRpki(::grpc::ServerContext* context, const ::gobgpapi::EnableRpkiRequest* request, ::gobgpapi::EnableRpkiResponse* response);
    virtual ::grpc::Status DisableRpki(::grpc::ServerContext* context, const ::gobgpapi::DisableRpkiRequest* request, ::gobgpapi::DisableRpkiResponse* response);
    virtual ::grpc::Status ResetRpki(::grpc::ServerContext* context, const ::gobgpapi::ResetRpkiRequest* request, ::gobgpapi::ResetRpkiResponse* response);
    virtual ::grpc::Status SoftResetRpki(::grpc::ServerContext* context, const ::gobgpapi::SoftResetRpkiRequest* request, ::gobgpapi::SoftResetRpkiResponse* response);
    virtual ::grpc::Status GetRoa(::grpc::ServerContext* context, const ::gobgpapi::GetRoaRequest* request, ::gobgpapi::GetRoaResponse* response);
    virtual ::grpc::Status EnableZebra(::grpc::ServerContext* context, const ::gobgpapi::EnableZebraRequest* request, ::gobgpapi::EnableZebraResponse* response);
    virtual ::grpc::Status AddVrf(::grpc::ServerContext* context, const ::gobgpapi::AddVrfRequest* request, ::gobgpapi::AddVrfResponse* response);
    virtual ::grpc::Status DeleteVrf(::grpc::ServerContext* context, const ::gobgpapi::DeleteVrfRequest* request, ::gobgpapi::DeleteVrfResponse* response);
    virtual ::grpc::Status GetVrf(::grpc::ServerContext* context, const ::gobgpapi::GetVrfRequest* request, ::gobgpapi::GetVrfResponse* response);
    virtual ::grpc::Status GetDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::GetDefinedSetRequest* request, ::gobgpapi::GetDefinedSetResponse* response);
    virtual ::grpc::Status AddDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::AddDefinedSetRequest* request, ::gobgpapi::AddDefinedSetResponse* response);
    virtual ::grpc::Status DeleteDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::DeleteDefinedSetRequest* request, ::gobgpapi::DeleteDefinedSetResponse* response);
    virtual ::grpc::Status ReplaceDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::ReplaceDefinedSetRequest* request, ::gobgpapi::ReplaceDefinedSetResponse* response);
    virtual ::grpc::Status GetStatement(::grpc::ServerContext* context, const ::gobgpapi::GetStatementRequest* request, ::gobgpapi::GetStatementResponse* response);
    virtual ::grpc::Status AddStatement(::grpc::ServerContext* context, const ::gobgpapi::AddStatementRequest* request, ::gobgpapi::AddStatementResponse* response);
    virtual ::grpc::Status DeleteStatement(::grpc::ServerContext* context, const ::gobgpapi::DeleteStatementRequest* request, ::gobgpapi::DeleteStatementResponse* response);
    virtual ::grpc::Status ReplaceStatement(::grpc::ServerContext* context, const ::gobgpapi::ReplaceStatementRequest* request, ::gobgpapi::ReplaceStatementResponse* response);
    virtual ::grpc::Status GetPolicy(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyRequest* request, ::gobgpapi::GetPolicyResponse* response);
    virtual ::grpc::Status AddPolicy(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyRequest* request, ::gobgpapi::AddPolicyResponse* response);
    virtual ::grpc::Status DeletePolicy(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyRequest* request, ::gobgpapi::DeletePolicyResponse* response);
    virtual ::grpc::Status ReplacePolicy(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyRequest* request, ::gobgpapi::ReplacePolicyResponse* response);
    virtual ::grpc::Status GetPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyAssignmentRequest* request, ::gobgpapi::GetPolicyAssignmentResponse* response);
    virtual ::grpc::Status AddPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyAssignmentRequest* request, ::gobgpapi::AddPolicyAssignmentResponse* response);
    virtual ::grpc::Status DeletePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest* request, ::gobgpapi::DeletePolicyAssignmentResponse* response);
    virtual ::grpc::Status ReplacePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest* request, ::gobgpapi::ReplacePolicyAssignmentResponse* response);
    virtual ::grpc::Status GetRibInfo(::grpc::ServerContext* context, const ::gobgpapi::GetRibInfoRequest* request, ::gobgpapi::GetRibInfoResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_StartServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StartServer() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StartServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartServer(::grpc::ServerContext* context, const ::gobgpapi::StartServerRequest* request, ::gobgpapi::StartServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartServer(::grpc::ServerContext* context, ::gobgpapi::StartServerRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::StartServerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StopServer() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_StopServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopServer(::grpc::ServerContext* context, const ::gobgpapi::StopServerRequest* request, ::gobgpapi::StopServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopServer(::grpc::ServerContext* context, ::gobgpapi::StopServerRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::StopServerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetServer() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServer(::grpc::ServerContext* context, const ::gobgpapi::GetServerRequest* request, ::gobgpapi::GetServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServer(::grpc::ServerContext* context, ::gobgpapi::GetServerRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetServerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddNeighbor() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_AddNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNeighbor(::grpc::ServerContext* context, const ::gobgpapi::AddNeighborRequest* request, ::gobgpapi::AddNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddNeighbor(::grpc::ServerContext* context, ::gobgpapi::AddNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteNeighbor() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DeleteNeighborRequest* request, ::gobgpapi::DeleteNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNeighbor(::grpc::ServerContext* context, ::gobgpapi::DeleteNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeleteNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetNeighbor() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::GetNeighborRequest* request, ::gobgpapi::GetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNeighbor(::grpc::ServerContext* context, ::gobgpapi::GetNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ResetNeighbor() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ResetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ResetNeighborRequest* request, ::gobgpapi::ResetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetNeighbor(::grpc::ServerContext* context, ::gobgpapi::ResetNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ResetNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SoftResetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SoftResetNeighbor() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SoftResetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SoftResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::SoftResetNeighborRequest* request, ::gobgpapi::SoftResetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSoftResetNeighbor(::grpc::ServerContext* context, ::gobgpapi::SoftResetNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::SoftResetNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShutdownNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShutdownNeighbor() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ShutdownNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutdownNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ShutdownNeighborRequest* request, ::gobgpapi::ShutdownNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutdownNeighbor(::grpc::ServerContext* context, ::gobgpapi::ShutdownNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ShutdownNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnableNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EnableNeighbor() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_EnableNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::EnableNeighborRequest* request, ::gobgpapi::EnableNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnableNeighbor(::grpc::ServerContext* context, ::gobgpapi::EnableNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::EnableNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DisableNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DisableNeighbor() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_DisableNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DisableNeighborRequest* request, ::gobgpapi::DisableNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisableNeighbor(::grpc::ServerContext* context, ::gobgpapi::DisableNeighborRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DisableNeighborResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRib() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRib(::grpc::ServerContext* context, const ::gobgpapi::GetRibRequest* request, ::gobgpapi::GetRibResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRib(::grpc::ServerContext* context, ::gobgpapi::GetRibRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetRibResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetPath() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPath(::grpc::ServerContext* context, const ::gobgpapi::GetPathRequest* request, ::grpc::ServerWriter< ::gobgpapi::Path>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPath(::grpc::ServerContext* context, ::gobgpapi::GetPathRequest* request, ::grpc::ServerAsyncWriter< ::gobgpapi::Path>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(12, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ValidateRib() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ValidateRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRib(::grpc::ServerContext* context, const ::gobgpapi::ValidateRibRequest* request, ::gobgpapi::ValidateRibResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateRib(::grpc::ServerContext* context, ::gobgpapi::ValidateRibRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ValidateRibResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddPath() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_AddPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPath(::grpc::ServerContext* context, const ::gobgpapi::AddPathRequest* request, ::gobgpapi::AddPathResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPath(::grpc::ServerContext* context, ::gobgpapi::AddPathRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddPathResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeletePath() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeletePath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePath(::grpc::ServerContext* context, const ::gobgpapi::DeletePathRequest* request, ::gobgpapi::DeletePathResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePath(::grpc::ServerContext* context, ::gobgpapi::DeletePathRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeletePathResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MonitorRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MonitorRib() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_MonitorRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MonitorRib(::grpc::ServerContext* context, const ::gobgpapi::MonitorRibRequest* request, ::grpc::ServerWriter< ::gobgpapi::Destination>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMonitorRib(::grpc::ServerContext* context, ::gobgpapi::MonitorRibRequest* request, ::grpc::ServerAsyncWriter< ::gobgpapi::Destination>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(16, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MonitorPeerState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MonitorPeerState() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_MonitorPeerState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MonitorPeerState(::grpc::ServerContext* context, const ::gobgpapi::Arguments* request, ::grpc::ServerWriter< ::gobgpapi::Peer>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMonitorPeerState(::grpc::ServerContext* context, ::gobgpapi::Arguments* request, ::grpc::ServerAsyncWriter< ::gobgpapi::Peer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(17, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnableMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EnableMrt() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_EnableMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableMrt(::grpc::ServerContext* context, const ::gobgpapi::EnableMrtRequest* request, ::gobgpapi::EnableMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnableMrt(::grpc::ServerContext* context, ::gobgpapi::EnableMrtRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::EnableMrtResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DisableMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DisableMrt() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_DisableMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableMrt(::grpc::ServerContext* context, const ::gobgpapi::DisableMrtRequest* request, ::gobgpapi::DisableMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisableMrt(::grpc::ServerContext* context, ::gobgpapi::DisableMrtRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DisableMrtResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InjectMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_InjectMrt() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_InjectMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InjectMrt(::grpc::ServerContext* context, ::grpc::ServerReader< ::gobgpapi::InjectMrtRequest>* reader, ::gobgpapi::InjectMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInjectMrt(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::gobgpapi::InjectMrtResponse, ::gobgpapi::InjectMrtRequest>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(20, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddBmp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddBmp() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_AddBmp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBmp(::grpc::ServerContext* context, const ::gobgpapi::AddBmpRequest* request, ::gobgpapi::AddBmpResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddBmp(::grpc::ServerContext* context, ::gobgpapi::AddBmpRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddBmpResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBmp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteBmp() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_DeleteBmp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBmp(::grpc::ServerContext* context, const ::gobgpapi::DeleteBmpRequest* request, ::gobgpapi::DeleteBmpResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBmp(::grpc::ServerContext* context, ::gobgpapi::DeleteBmpRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeleteBmpResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRpki() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_GetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRpki(::grpc::ServerContext* context, const ::gobgpapi::GetRpkiRequest* request, ::gobgpapi::GetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRpki(::grpc::ServerContext* context, ::gobgpapi::GetRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddRpki() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_AddRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRpki(::grpc::ServerContext* context, const ::gobgpapi::AddRpkiRequest* request, ::gobgpapi::AddRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddRpki(::grpc::ServerContext* context, ::gobgpapi::AddRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteRpki() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_DeleteRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRpki(::grpc::ServerContext* context, const ::gobgpapi::DeleteRpkiRequest* request, ::gobgpapi::DeleteRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRpki(::grpc::ServerContext* context, ::gobgpapi::DeleteRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeleteRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnableRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EnableRpki() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_EnableRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableRpki(::grpc::ServerContext* context, const ::gobgpapi::EnableRpkiRequest* request, ::gobgpapi::EnableRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnableRpki(::grpc::ServerContext* context, ::gobgpapi::EnableRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::EnableRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DisableRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DisableRpki() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_DisableRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableRpki(::grpc::ServerContext* context, const ::gobgpapi::DisableRpkiRequest* request, ::gobgpapi::DisableRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisableRpki(::grpc::ServerContext* context, ::gobgpapi::DisableRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DisableRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ResetRpki() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_ResetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetRpki(::grpc::ServerContext* context, const ::gobgpapi::ResetRpkiRequest* request, ::gobgpapi::ResetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetRpki(::grpc::ServerContext* context, ::gobgpapi::ResetRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ResetRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SoftResetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SoftResetRpki() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_SoftResetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SoftResetRpki(::grpc::ServerContext* context, const ::gobgpapi::SoftResetRpkiRequest* request, ::gobgpapi::SoftResetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSoftResetRpki(::grpc::ServerContext* context, ::gobgpapi::SoftResetRpkiRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::SoftResetRpkiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoa : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRoa() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GetRoa() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoa(::grpc::ServerContext* context, const ::gobgpapi::GetRoaRequest* request, ::gobgpapi::GetRoaResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoa(::grpc::ServerContext* context, ::gobgpapi::GetRoaRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetRoaResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnableZebra : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EnableZebra() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_EnableZebra() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableZebra(::grpc::ServerContext* context, const ::gobgpapi::EnableZebraRequest* request, ::gobgpapi::EnableZebraResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnableZebra(::grpc::ServerContext* context, ::gobgpapi::EnableZebraRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::EnableZebraResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddVrf() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_AddVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddVrf(::grpc::ServerContext* context, const ::gobgpapi::AddVrfRequest* request, ::gobgpapi::AddVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddVrf(::grpc::ServerContext* context, ::gobgpapi::AddVrfRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddVrfResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteVrf() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_DeleteVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVrf(::grpc::ServerContext* context, const ::gobgpapi::DeleteVrfRequest* request, ::gobgpapi::DeleteVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVrf(::grpc::ServerContext* context, ::gobgpapi::DeleteVrfRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeleteVrfResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetVrf() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_GetVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVrf(::grpc::ServerContext* context, const ::gobgpapi::GetVrfRequest* request, ::gobgpapi::GetVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVrf(::grpc::ServerContext* context, ::gobgpapi::GetVrfRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetVrfResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetDefinedSet() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_GetDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::GetDefinedSetRequest* request, ::gobgpapi::GetDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDefinedSet(::grpc::ServerContext* context, ::gobgpapi::GetDefinedSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetDefinedSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddDefinedSet() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_AddDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::AddDefinedSetRequest* request, ::gobgpapi::AddDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddDefinedSet(::grpc::ServerContext* context, ::gobgpapi::AddDefinedSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddDefinedSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteDefinedSet() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_DeleteDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::DeleteDefinedSetRequest* request, ::gobgpapi::DeleteDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDefinedSet(::grpc::ServerContext* context, ::gobgpapi::DeleteDefinedSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeleteDefinedSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReplaceDefinedSet() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_ReplaceDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::ReplaceDefinedSetRequest* request, ::gobgpapi::ReplaceDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceDefinedSet(::grpc::ServerContext* context, ::gobgpapi::ReplaceDefinedSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ReplaceDefinedSetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetStatement() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_GetStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStatement(::grpc::ServerContext* context, const ::gobgpapi::GetStatementRequest* request, ::gobgpapi::GetStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStatement(::grpc::ServerContext* context, ::gobgpapi::GetStatementRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetStatementResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddStatement() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_AddStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStatement(::grpc::ServerContext* context, const ::gobgpapi::AddStatementRequest* request, ::gobgpapi::AddStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddStatement(::grpc::ServerContext* context, ::gobgpapi::AddStatementRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddStatementResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteStatement() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_DeleteStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStatement(::grpc::ServerContext* context, const ::gobgpapi::DeleteStatementRequest* request, ::gobgpapi::DeleteStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteStatement(::grpc::ServerContext* context, ::gobgpapi::DeleteStatementRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeleteStatementResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReplaceStatement() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_ReplaceStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceStatement(::grpc::ServerContext* context, const ::gobgpapi::ReplaceStatementRequest* request, ::gobgpapi::ReplaceStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceStatement(::grpc::ServerContext* context, ::gobgpapi::ReplaceStatementRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ReplaceStatementResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetPolicy() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_GetPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicy(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyRequest* request, ::gobgpapi::GetPolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicy(::grpc::ServerContext* context, ::gobgpapi::GetPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetPolicyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddPolicy() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_AddPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPolicy(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyRequest* request, ::gobgpapi::AddPolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPolicy(::grpc::ServerContext* context, ::gobgpapi::AddPolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddPolicyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeletePolicy() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_DeletePolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePolicy(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyRequest* request, ::gobgpapi::DeletePolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePolicy(::grpc::ServerContext* context, ::gobgpapi::DeletePolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeletePolicyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplacePolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReplacePolicy() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_ReplacePolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplacePolicy(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyRequest* request, ::gobgpapi::ReplacePolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplacePolicy(::grpc::ServerContext* context, ::gobgpapi::ReplacePolicyRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ReplacePolicyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetPolicyAssignment() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_GetPolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyAssignmentRequest* request, ::gobgpapi::GetPolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyAssignment(::grpc::ServerContext* context, ::gobgpapi::GetPolicyAssignmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetPolicyAssignmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddPolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddPolicyAssignment() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_AddPolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyAssignmentRequest* request, ::gobgpapi::AddPolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddPolicyAssignment(::grpc::ServerContext* context, ::gobgpapi::AddPolicyAssignmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::AddPolicyAssignmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeletePolicyAssignment() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_DeletePolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest* request, ::gobgpapi::DeletePolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePolicyAssignment(::grpc::ServerContext* context, ::gobgpapi::DeletePolicyAssignmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::DeletePolicyAssignmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplacePolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReplacePolicyAssignment() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_ReplacePolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplacePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest* request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplacePolicyAssignment(::grpc::ServerContext* context, ::gobgpapi::ReplacePolicyAssignmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::ReplacePolicyAssignmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRibInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRibInfo() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_GetRibInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRibInfo(::grpc::ServerContext* context, const ::gobgpapi::GetRibInfoRequest* request, ::gobgpapi::GetRibInfoResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRibInfo(::grpc::ServerContext* context, ::gobgpapi::GetRibInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::gobgpapi::GetRibInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StartServer<WithAsyncMethod_StopServer<WithAsyncMethod_GetServer<WithAsyncMethod_AddNeighbor<WithAsyncMethod_DeleteNeighbor<WithAsyncMethod_GetNeighbor<WithAsyncMethod_ResetNeighbor<WithAsyncMethod_SoftResetNeighbor<WithAsyncMethod_ShutdownNeighbor<WithAsyncMethod_EnableNeighbor<WithAsyncMethod_DisableNeighbor<WithAsyncMethod_GetRib<WithAsyncMethod_GetPath<WithAsyncMethod_ValidateRib<WithAsyncMethod_AddPath<WithAsyncMethod_DeletePath<WithAsyncMethod_MonitorRib<WithAsyncMethod_MonitorPeerState<WithAsyncMethod_EnableMrt<WithAsyncMethod_DisableMrt<WithAsyncMethod_InjectMrt<WithAsyncMethod_AddBmp<WithAsyncMethod_DeleteBmp<WithAsyncMethod_GetRpki<WithAsyncMethod_AddRpki<WithAsyncMethod_DeleteRpki<WithAsyncMethod_EnableRpki<WithAsyncMethod_DisableRpki<WithAsyncMethod_ResetRpki<WithAsyncMethod_SoftResetRpki<WithAsyncMethod_GetRoa<WithAsyncMethod_EnableZebra<WithAsyncMethod_AddVrf<WithAsyncMethod_DeleteVrf<WithAsyncMethod_GetVrf<WithAsyncMethod_GetDefinedSet<WithAsyncMethod_AddDefinedSet<WithAsyncMethod_DeleteDefinedSet<WithAsyncMethod_ReplaceDefinedSet<WithAsyncMethod_GetStatement<WithAsyncMethod_AddStatement<WithAsyncMethod_DeleteStatement<WithAsyncMethod_ReplaceStatement<WithAsyncMethod_GetPolicy<WithAsyncMethod_AddPolicy<WithAsyncMethod_DeletePolicy<WithAsyncMethod_ReplacePolicy<WithAsyncMethod_GetPolicyAssignment<WithAsyncMethod_AddPolicyAssignment<WithAsyncMethod_DeletePolicyAssignment<WithAsyncMethod_ReplacePolicyAssignment<WithAsyncMethod_GetRibInfo<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_StartServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StartServer() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StartServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartServer(::grpc::ServerContext* context, const ::gobgpapi::StartServerRequest* request, ::gobgpapi::StartServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StopServer() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_StopServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopServer(::grpc::ServerContext* context, const ::gobgpapi::StopServerRequest* request, ::gobgpapi::StopServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetServer() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServer(::grpc::ServerContext* context, const ::gobgpapi::GetServerRequest* request, ::gobgpapi::GetServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddNeighbor() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_AddNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddNeighbor(::grpc::ServerContext* context, const ::gobgpapi::AddNeighborRequest* request, ::gobgpapi::AddNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteNeighbor() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DeleteNeighborRequest* request, ::gobgpapi::DeleteNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetNeighbor() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::GetNeighborRequest* request, ::gobgpapi::GetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ResetNeighbor() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ResetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ResetNeighborRequest* request, ::gobgpapi::ResetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SoftResetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SoftResetNeighbor() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SoftResetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SoftResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::SoftResetNeighborRequest* request, ::gobgpapi::SoftResetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShutdownNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShutdownNeighbor() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ShutdownNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutdownNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ShutdownNeighborRequest* request, ::gobgpapi::ShutdownNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnableNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EnableNeighbor() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_EnableNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::EnableNeighborRequest* request, ::gobgpapi::EnableNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DisableNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DisableNeighbor() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_DisableNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DisableNeighborRequest* request, ::gobgpapi::DisableNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRib() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRib(::grpc::ServerContext* context, const ::gobgpapi::GetRibRequest* request, ::gobgpapi::GetRibResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetPath() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPath(::grpc::ServerContext* context, const ::gobgpapi::GetPathRequest* request, ::grpc::ServerWriter< ::gobgpapi::Path>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ValidateRib() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ValidateRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRib(::grpc::ServerContext* context, const ::gobgpapi::ValidateRibRequest* request, ::gobgpapi::ValidateRibResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddPath() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_AddPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPath(::grpc::ServerContext* context, const ::gobgpapi::AddPathRequest* request, ::gobgpapi::AddPathResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeletePath() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeletePath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePath(::grpc::ServerContext* context, const ::gobgpapi::DeletePathRequest* request, ::gobgpapi::DeletePathResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MonitorRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MonitorRib() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_MonitorRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MonitorRib(::grpc::ServerContext* context, const ::gobgpapi::MonitorRibRequest* request, ::grpc::ServerWriter< ::gobgpapi::Destination>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MonitorPeerState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MonitorPeerState() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_MonitorPeerState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MonitorPeerState(::grpc::ServerContext* context, const ::gobgpapi::Arguments* request, ::grpc::ServerWriter< ::gobgpapi::Peer>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnableMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EnableMrt() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_EnableMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableMrt(::grpc::ServerContext* context, const ::gobgpapi::EnableMrtRequest* request, ::gobgpapi::EnableMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DisableMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DisableMrt() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_DisableMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableMrt(::grpc::ServerContext* context, const ::gobgpapi::DisableMrtRequest* request, ::gobgpapi::DisableMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InjectMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_InjectMrt() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_InjectMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InjectMrt(::grpc::ServerContext* context, ::grpc::ServerReader< ::gobgpapi::InjectMrtRequest>* reader, ::gobgpapi::InjectMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddBmp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddBmp() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_AddBmp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddBmp(::grpc::ServerContext* context, const ::gobgpapi::AddBmpRequest* request, ::gobgpapi::AddBmpResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteBmp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteBmp() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_DeleteBmp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBmp(::grpc::ServerContext* context, const ::gobgpapi::DeleteBmpRequest* request, ::gobgpapi::DeleteBmpResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRpki() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_GetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRpki(::grpc::ServerContext* context, const ::gobgpapi::GetRpkiRequest* request, ::gobgpapi::GetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddRpki() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_AddRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddRpki(::grpc::ServerContext* context, const ::gobgpapi::AddRpkiRequest* request, ::gobgpapi::AddRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteRpki() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_DeleteRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRpki(::grpc::ServerContext* context, const ::gobgpapi::DeleteRpkiRequest* request, ::gobgpapi::DeleteRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnableRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EnableRpki() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_EnableRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableRpki(::grpc::ServerContext* context, const ::gobgpapi::EnableRpkiRequest* request, ::gobgpapi::EnableRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DisableRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DisableRpki() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_DisableRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableRpki(::grpc::ServerContext* context, const ::gobgpapi::DisableRpkiRequest* request, ::gobgpapi::DisableRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ResetRpki() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_ResetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetRpki(::grpc::ServerContext* context, const ::gobgpapi::ResetRpkiRequest* request, ::gobgpapi::ResetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SoftResetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SoftResetRpki() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_SoftResetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SoftResetRpki(::grpc::ServerContext* context, const ::gobgpapi::SoftResetRpkiRequest* request, ::gobgpapi::SoftResetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoa : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRoa() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GetRoa() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoa(::grpc::ServerContext* context, const ::gobgpapi::GetRoaRequest* request, ::gobgpapi::GetRoaResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnableZebra : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EnableZebra() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_EnableZebra() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnableZebra(::grpc::ServerContext* context, const ::gobgpapi::EnableZebraRequest* request, ::gobgpapi::EnableZebraResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddVrf() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_AddVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddVrf(::grpc::ServerContext* context, const ::gobgpapi::AddVrfRequest* request, ::gobgpapi::AddVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteVrf() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_DeleteVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVrf(::grpc::ServerContext* context, const ::gobgpapi::DeleteVrfRequest* request, ::gobgpapi::DeleteVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetVrf() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_GetVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVrf(::grpc::ServerContext* context, const ::gobgpapi::GetVrfRequest* request, ::gobgpapi::GetVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetDefinedSet() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_GetDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::GetDefinedSetRequest* request, ::gobgpapi::GetDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddDefinedSet() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_AddDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::AddDefinedSetRequest* request, ::gobgpapi::AddDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteDefinedSet() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_DeleteDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::DeleteDefinedSetRequest* request, ::gobgpapi::DeleteDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReplaceDefinedSet() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_ReplaceDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::ReplaceDefinedSetRequest* request, ::gobgpapi::ReplaceDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetStatement() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_GetStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStatement(::grpc::ServerContext* context, const ::gobgpapi::GetStatementRequest* request, ::gobgpapi::GetStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddStatement() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_AddStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStatement(::grpc::ServerContext* context, const ::gobgpapi::AddStatementRequest* request, ::gobgpapi::AddStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteStatement() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_DeleteStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStatement(::grpc::ServerContext* context, const ::gobgpapi::DeleteStatementRequest* request, ::gobgpapi::DeleteStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReplaceStatement() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_ReplaceStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceStatement(::grpc::ServerContext* context, const ::gobgpapi::ReplaceStatementRequest* request, ::gobgpapi::ReplaceStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetPolicy() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_GetPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicy(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyRequest* request, ::gobgpapi::GetPolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddPolicy() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_AddPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPolicy(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyRequest* request, ::gobgpapi::AddPolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeletePolicy() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_DeletePolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePolicy(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyRequest* request, ::gobgpapi::DeletePolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplacePolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReplacePolicy() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_ReplacePolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplacePolicy(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyRequest* request, ::gobgpapi::ReplacePolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetPolicyAssignment() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_GetPolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyAssignmentRequest* request, ::gobgpapi::GetPolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddPolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddPolicyAssignment() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_AddPolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyAssignmentRequest* request, ::gobgpapi::AddPolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeletePolicyAssignment() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_DeletePolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest* request, ::gobgpapi::DeletePolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplacePolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReplacePolicyAssignment() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_ReplacePolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplacePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest* request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRibInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRibInfo() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_GetRibInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRibInfo(::grpc::ServerContext* context, const ::gobgpapi::GetRibInfoRequest* request, ::gobgpapi::GetRibInfoResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StartServer() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::StartServerRequest, ::gobgpapi::StartServerResponse>(std::bind(&WithStreamedUnaryMethod_StartServer<BaseClass>::StreamedStartServer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StartServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartServer(::grpc::ServerContext* context, const ::gobgpapi::StartServerRequest* request, ::gobgpapi::StartServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartServer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::StartServerRequest,::gobgpapi::StartServerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StopServer() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::StopServerRequest, ::gobgpapi::StopServerResponse>(std::bind(&WithStreamedUnaryMethod_StopServer<BaseClass>::StreamedStopServer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StopServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopServer(::grpc::ServerContext* context, const ::gobgpapi::StopServerRequest* request, ::gobgpapi::StopServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopServer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::StopServerRequest,::gobgpapi::StopServerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetServer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetServer() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetServerRequest, ::gobgpapi::GetServerResponse>(std::bind(&WithStreamedUnaryMethod_GetServer<BaseClass>::StreamedGetServer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetServer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetServer(::grpc::ServerContext* context, const ::gobgpapi::GetServerRequest* request, ::gobgpapi::GetServerResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetServer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetServerRequest,::gobgpapi::GetServerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddNeighbor() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddNeighborRequest, ::gobgpapi::AddNeighborResponse>(std::bind(&WithStreamedUnaryMethod_AddNeighbor<BaseClass>::StreamedAddNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddNeighbor(::grpc::ServerContext* context, const ::gobgpapi::AddNeighborRequest* request, ::gobgpapi::AddNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddNeighborRequest,::gobgpapi::AddNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteNeighbor() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeleteNeighborRequest, ::gobgpapi::DeleteNeighborResponse>(std::bind(&WithStreamedUnaryMethod_DeleteNeighbor<BaseClass>::StreamedDeleteNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DeleteNeighborRequest* request, ::gobgpapi::DeleteNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeleteNeighborRequest,::gobgpapi::DeleteNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetNeighbor() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetNeighborRequest, ::gobgpapi::GetNeighborResponse>(std::bind(&WithStreamedUnaryMethod_GetNeighbor<BaseClass>::StreamedGetNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::GetNeighborRequest* request, ::gobgpapi::GetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetNeighborRequest,::gobgpapi::GetNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ResetNeighbor() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ResetNeighborRequest, ::gobgpapi::ResetNeighborResponse>(std::bind(&WithStreamedUnaryMethod_ResetNeighbor<BaseClass>::StreamedResetNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ResetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ResetNeighborRequest* request, ::gobgpapi::ResetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ResetNeighborRequest,::gobgpapi::ResetNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SoftResetNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SoftResetNeighbor() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::SoftResetNeighborRequest, ::gobgpapi::SoftResetNeighborResponse>(std::bind(&WithStreamedUnaryMethod_SoftResetNeighbor<BaseClass>::StreamedSoftResetNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SoftResetNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SoftResetNeighbor(::grpc::ServerContext* context, const ::gobgpapi::SoftResetNeighborRequest* request, ::gobgpapi::SoftResetNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSoftResetNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::SoftResetNeighborRequest,::gobgpapi::SoftResetNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShutdownNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShutdownNeighbor() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ShutdownNeighborRequest, ::gobgpapi::ShutdownNeighborResponse>(std::bind(&WithStreamedUnaryMethod_ShutdownNeighbor<BaseClass>::StreamedShutdownNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShutdownNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShutdownNeighbor(::grpc::ServerContext* context, const ::gobgpapi::ShutdownNeighborRequest* request, ::gobgpapi::ShutdownNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShutdownNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ShutdownNeighborRequest,::gobgpapi::ShutdownNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnableNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EnableNeighbor() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::EnableNeighborRequest, ::gobgpapi::EnableNeighborResponse>(std::bind(&WithStreamedUnaryMethod_EnableNeighbor<BaseClass>::StreamedEnableNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnableNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::EnableNeighborRequest* request, ::gobgpapi::EnableNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnableNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::EnableNeighborRequest,::gobgpapi::EnableNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DisableNeighbor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DisableNeighbor() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DisableNeighborRequest, ::gobgpapi::DisableNeighborResponse>(std::bind(&WithStreamedUnaryMethod_DisableNeighbor<BaseClass>::StreamedDisableNeighbor, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DisableNeighbor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DisableNeighbor(::grpc::ServerContext* context, const ::gobgpapi::DisableNeighborRequest* request, ::gobgpapi::DisableNeighborResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDisableNeighbor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DisableNeighborRequest,::gobgpapi::DisableNeighborResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRib() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetRibRequest, ::gobgpapi::GetRibResponse>(std::bind(&WithStreamedUnaryMethod_GetRib<BaseClass>::StreamedGetRib, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRib(::grpc::ServerContext* context, const ::gobgpapi::GetRibRequest* request, ::gobgpapi::GetRibResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRib(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetRibRequest,::gobgpapi::GetRibResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ValidateRib() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ValidateRibRequest, ::gobgpapi::ValidateRibResponse>(std::bind(&WithStreamedUnaryMethod_ValidateRib<BaseClass>::StreamedValidateRib, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ValidateRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateRib(::grpc::ServerContext* context, const ::gobgpapi::ValidateRibRequest* request, ::gobgpapi::ValidateRibResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateRib(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ValidateRibRequest,::gobgpapi::ValidateRibResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddPath() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddPathRequest, ::gobgpapi::AddPathResponse>(std::bind(&WithStreamedUnaryMethod_AddPath<BaseClass>::StreamedAddPath, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPath(::grpc::ServerContext* context, const ::gobgpapi::AddPathRequest* request, ::gobgpapi::AddPathResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddPathRequest,::gobgpapi::AddPathResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeletePath() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeletePathRequest, ::gobgpapi::DeletePathResponse>(std::bind(&WithStreamedUnaryMethod_DeletePath<BaseClass>::StreamedDeletePath, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeletePath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePath(::grpc::ServerContext* context, const ::gobgpapi::DeletePathRequest* request, ::gobgpapi::DeletePathResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeletePathRequest,::gobgpapi::DeletePathResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnableMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EnableMrt() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::EnableMrtRequest, ::gobgpapi::EnableMrtResponse>(std::bind(&WithStreamedUnaryMethod_EnableMrt<BaseClass>::StreamedEnableMrt, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnableMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnableMrt(::grpc::ServerContext* context, const ::gobgpapi::EnableMrtRequest* request, ::gobgpapi::EnableMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnableMrt(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::EnableMrtRequest,::gobgpapi::EnableMrtResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DisableMrt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DisableMrt() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DisableMrtRequest, ::gobgpapi::DisableMrtResponse>(std::bind(&WithStreamedUnaryMethod_DisableMrt<BaseClass>::StreamedDisableMrt, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DisableMrt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DisableMrt(::grpc::ServerContext* context, const ::gobgpapi::DisableMrtRequest* request, ::gobgpapi::DisableMrtResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDisableMrt(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DisableMrtRequest,::gobgpapi::DisableMrtResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddBmp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddBmp() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddBmpRequest, ::gobgpapi::AddBmpResponse>(std::bind(&WithStreamedUnaryMethod_AddBmp<BaseClass>::StreamedAddBmp, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddBmp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddBmp(::grpc::ServerContext* context, const ::gobgpapi::AddBmpRequest* request, ::gobgpapi::AddBmpResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddBmp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddBmpRequest,::gobgpapi::AddBmpResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBmp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteBmp() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeleteBmpRequest, ::gobgpapi::DeleteBmpResponse>(std::bind(&WithStreamedUnaryMethod_DeleteBmp<BaseClass>::StreamedDeleteBmp, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteBmp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBmp(::grpc::ServerContext* context, const ::gobgpapi::DeleteBmpRequest* request, ::gobgpapi::DeleteBmpResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBmp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeleteBmpRequest,::gobgpapi::DeleteBmpResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRpki() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetRpkiRequest, ::gobgpapi::GetRpkiResponse>(std::bind(&WithStreamedUnaryMethod_GetRpki<BaseClass>::StreamedGetRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRpki(::grpc::ServerContext* context, const ::gobgpapi::GetRpkiRequest* request, ::gobgpapi::GetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetRpkiRequest,::gobgpapi::GetRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddRpki() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddRpkiRequest, ::gobgpapi::AddRpkiResponse>(std::bind(&WithStreamedUnaryMethod_AddRpki<BaseClass>::StreamedAddRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddRpki(::grpc::ServerContext* context, const ::gobgpapi::AddRpkiRequest* request, ::gobgpapi::AddRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddRpkiRequest,::gobgpapi::AddRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteRpki() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeleteRpkiRequest, ::gobgpapi::DeleteRpkiResponse>(std::bind(&WithStreamedUnaryMethod_DeleteRpki<BaseClass>::StreamedDeleteRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRpki(::grpc::ServerContext* context, const ::gobgpapi::DeleteRpkiRequest* request, ::gobgpapi::DeleteRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeleteRpkiRequest,::gobgpapi::DeleteRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnableRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EnableRpki() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::EnableRpkiRequest, ::gobgpapi::EnableRpkiResponse>(std::bind(&WithStreamedUnaryMethod_EnableRpki<BaseClass>::StreamedEnableRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnableRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnableRpki(::grpc::ServerContext* context, const ::gobgpapi::EnableRpkiRequest* request, ::gobgpapi::EnableRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnableRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::EnableRpkiRequest,::gobgpapi::EnableRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DisableRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DisableRpki() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DisableRpkiRequest, ::gobgpapi::DisableRpkiResponse>(std::bind(&WithStreamedUnaryMethod_DisableRpki<BaseClass>::StreamedDisableRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DisableRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DisableRpki(::grpc::ServerContext* context, const ::gobgpapi::DisableRpkiRequest* request, ::gobgpapi::DisableRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDisableRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DisableRpkiRequest,::gobgpapi::DisableRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ResetRpki() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ResetRpkiRequest, ::gobgpapi::ResetRpkiResponse>(std::bind(&WithStreamedUnaryMethod_ResetRpki<BaseClass>::StreamedResetRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ResetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetRpki(::grpc::ServerContext* context, const ::gobgpapi::ResetRpkiRequest* request, ::gobgpapi::ResetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ResetRpkiRequest,::gobgpapi::ResetRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SoftResetRpki : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SoftResetRpki() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::SoftResetRpkiRequest, ::gobgpapi::SoftResetRpkiResponse>(std::bind(&WithStreamedUnaryMethod_SoftResetRpki<BaseClass>::StreamedSoftResetRpki, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SoftResetRpki() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SoftResetRpki(::grpc::ServerContext* context, const ::gobgpapi::SoftResetRpkiRequest* request, ::gobgpapi::SoftResetRpkiResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSoftResetRpki(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::SoftResetRpkiRequest,::gobgpapi::SoftResetRpkiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoa : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRoa() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetRoaRequest, ::gobgpapi::GetRoaResponse>(std::bind(&WithStreamedUnaryMethod_GetRoa<BaseClass>::StreamedGetRoa, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRoa() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoa(::grpc::ServerContext* context, const ::gobgpapi::GetRoaRequest* request, ::gobgpapi::GetRoaResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoa(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetRoaRequest,::gobgpapi::GetRoaResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnableZebra : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EnableZebra() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::EnableZebraRequest, ::gobgpapi::EnableZebraResponse>(std::bind(&WithStreamedUnaryMethod_EnableZebra<BaseClass>::StreamedEnableZebra, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnableZebra() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnableZebra(::grpc::ServerContext* context, const ::gobgpapi::EnableZebraRequest* request, ::gobgpapi::EnableZebraResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnableZebra(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::EnableZebraRequest,::gobgpapi::EnableZebraResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddVrf() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddVrfRequest, ::gobgpapi::AddVrfResponse>(std::bind(&WithStreamedUnaryMethod_AddVrf<BaseClass>::StreamedAddVrf, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddVrf(::grpc::ServerContext* context, const ::gobgpapi::AddVrfRequest* request, ::gobgpapi::AddVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddVrf(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddVrfRequest,::gobgpapi::AddVrfResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteVrf() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeleteVrfRequest, ::gobgpapi::DeleteVrfResponse>(std::bind(&WithStreamedUnaryMethod_DeleteVrf<BaseClass>::StreamedDeleteVrf, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteVrf(::grpc::ServerContext* context, const ::gobgpapi::DeleteVrfRequest* request, ::gobgpapi::DeleteVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteVrf(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeleteVrfRequest,::gobgpapi::DeleteVrfResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVrf : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetVrf() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetVrfRequest, ::gobgpapi::GetVrfResponse>(std::bind(&WithStreamedUnaryMethod_GetVrf<BaseClass>::StreamedGetVrf, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetVrf() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVrf(::grpc::ServerContext* context, const ::gobgpapi::GetVrfRequest* request, ::gobgpapi::GetVrfResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVrf(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetVrfRequest,::gobgpapi::GetVrfResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetDefinedSet() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetDefinedSetRequest, ::gobgpapi::GetDefinedSetResponse>(std::bind(&WithStreamedUnaryMethod_GetDefinedSet<BaseClass>::StreamedGetDefinedSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::GetDefinedSetRequest* request, ::gobgpapi::GetDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDefinedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetDefinedSetRequest,::gobgpapi::GetDefinedSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddDefinedSet() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddDefinedSetRequest, ::gobgpapi::AddDefinedSetResponse>(std::bind(&WithStreamedUnaryMethod_AddDefinedSet<BaseClass>::StreamedAddDefinedSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::AddDefinedSetRequest* request, ::gobgpapi::AddDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddDefinedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddDefinedSetRequest,::gobgpapi::AddDefinedSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteDefinedSet() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeleteDefinedSetRequest, ::gobgpapi::DeleteDefinedSetResponse>(std::bind(&WithStreamedUnaryMethod_DeleteDefinedSet<BaseClass>::StreamedDeleteDefinedSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::DeleteDefinedSetRequest* request, ::gobgpapi::DeleteDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDefinedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeleteDefinedSetRequest,::gobgpapi::DeleteDefinedSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplaceDefinedSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReplaceDefinedSet() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ReplaceDefinedSetRequest, ::gobgpapi::ReplaceDefinedSetResponse>(std::bind(&WithStreamedUnaryMethod_ReplaceDefinedSet<BaseClass>::StreamedReplaceDefinedSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReplaceDefinedSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplaceDefinedSet(::grpc::ServerContext* context, const ::gobgpapi::ReplaceDefinedSetRequest* request, ::gobgpapi::ReplaceDefinedSetResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplaceDefinedSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ReplaceDefinedSetRequest,::gobgpapi::ReplaceDefinedSetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetStatement() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetStatementRequest, ::gobgpapi::GetStatementResponse>(std::bind(&WithStreamedUnaryMethod_GetStatement<BaseClass>::StreamedGetStatement, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetStatement(::grpc::ServerContext* context, const ::gobgpapi::GetStatementRequest* request, ::gobgpapi::GetStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetStatement(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetStatementRequest,::gobgpapi::GetStatementResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddStatement() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddStatementRequest, ::gobgpapi::AddStatementResponse>(std::bind(&WithStreamedUnaryMethod_AddStatement<BaseClass>::StreamedAddStatement, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddStatement(::grpc::ServerContext* context, const ::gobgpapi::AddStatementRequest* request, ::gobgpapi::AddStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddStatement(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddStatementRequest,::gobgpapi::AddStatementResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteStatement() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeleteStatementRequest, ::gobgpapi::DeleteStatementResponse>(std::bind(&WithStreamedUnaryMethod_DeleteStatement<BaseClass>::StreamedDeleteStatement, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteStatement(::grpc::ServerContext* context, const ::gobgpapi::DeleteStatementRequest* request, ::gobgpapi::DeleteStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteStatement(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeleteStatementRequest,::gobgpapi::DeleteStatementResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplaceStatement : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReplaceStatement() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ReplaceStatementRequest, ::gobgpapi::ReplaceStatementResponse>(std::bind(&WithStreamedUnaryMethod_ReplaceStatement<BaseClass>::StreamedReplaceStatement, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReplaceStatement() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplaceStatement(::grpc::ServerContext* context, const ::gobgpapi::ReplaceStatementRequest* request, ::gobgpapi::ReplaceStatementResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplaceStatement(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ReplaceStatementRequest,::gobgpapi::ReplaceStatementResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetPolicy() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetPolicyRequest, ::gobgpapi::GetPolicyResponse>(std::bind(&WithStreamedUnaryMethod_GetPolicy<BaseClass>::StreamedGetPolicy, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPolicy(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyRequest* request, ::gobgpapi::GetPolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetPolicyRequest,::gobgpapi::GetPolicyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddPolicy() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddPolicyRequest, ::gobgpapi::AddPolicyResponse>(std::bind(&WithStreamedUnaryMethod_AddPolicy<BaseClass>::StreamedAddPolicy, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddPolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPolicy(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyRequest* request, ::gobgpapi::AddPolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddPolicyRequest,::gobgpapi::AddPolicyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeletePolicy() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeletePolicyRequest, ::gobgpapi::DeletePolicyResponse>(std::bind(&WithStreamedUnaryMethod_DeletePolicy<BaseClass>::StreamedDeletePolicy, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeletePolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePolicy(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyRequest* request, ::gobgpapi::DeletePolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeletePolicyRequest,::gobgpapi::DeletePolicyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplacePolicy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReplacePolicy() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ReplacePolicyRequest, ::gobgpapi::ReplacePolicyResponse>(std::bind(&WithStreamedUnaryMethod_ReplacePolicy<BaseClass>::StreamedReplacePolicy, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReplacePolicy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplacePolicy(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyRequest* request, ::gobgpapi::ReplacePolicyResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplacePolicy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ReplacePolicyRequest,::gobgpapi::ReplacePolicyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetPolicyAssignment() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetPolicyAssignmentRequest, ::gobgpapi::GetPolicyAssignmentResponse>(std::bind(&WithStreamedUnaryMethod_GetPolicyAssignment<BaseClass>::StreamedGetPolicyAssignment, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetPolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::GetPolicyAssignmentRequest* request, ::gobgpapi::GetPolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPolicyAssignment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetPolicyAssignmentRequest,::gobgpapi::GetPolicyAssignmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddPolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddPolicyAssignment() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::AddPolicyAssignmentRequest, ::gobgpapi::AddPolicyAssignmentResponse>(std::bind(&WithStreamedUnaryMethod_AddPolicyAssignment<BaseClass>::StreamedAddPolicyAssignment, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddPolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddPolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::AddPolicyAssignmentRequest* request, ::gobgpapi::AddPolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddPolicyAssignment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::AddPolicyAssignmentRequest,::gobgpapi::AddPolicyAssignmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeletePolicyAssignment() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::DeletePolicyAssignmentRequest, ::gobgpapi::DeletePolicyAssignmentResponse>(std::bind(&WithStreamedUnaryMethod_DeletePolicyAssignment<BaseClass>::StreamedDeletePolicyAssignment, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeletePolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::DeletePolicyAssignmentRequest* request, ::gobgpapi::DeletePolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePolicyAssignment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::DeletePolicyAssignmentRequest,::gobgpapi::DeletePolicyAssignmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplacePolicyAssignment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReplacePolicyAssignment() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::ReplacePolicyAssignmentRequest, ::gobgpapi::ReplacePolicyAssignmentResponse>(std::bind(&WithStreamedUnaryMethod_ReplacePolicyAssignment<BaseClass>::StreamedReplacePolicyAssignment, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReplacePolicyAssignment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplacePolicyAssignment(::grpc::ServerContext* context, const ::gobgpapi::ReplacePolicyAssignmentRequest* request, ::gobgpapi::ReplacePolicyAssignmentResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplacePolicyAssignment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::ReplacePolicyAssignmentRequest,::gobgpapi::ReplacePolicyAssignmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRibInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRibInfo() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler< ::gobgpapi::GetRibInfoRequest, ::gobgpapi::GetRibInfoResponse>(std::bind(&WithStreamedUnaryMethod_GetRibInfo<BaseClass>::StreamedGetRibInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRibInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRibInfo(::grpc::ServerContext* context, const ::gobgpapi::GetRibInfoRequest* request, ::gobgpapi::GetRibInfoResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRibInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::gobgpapi::GetRibInfoRequest,::gobgpapi::GetRibInfoResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_StartServer<WithStreamedUnaryMethod_StopServer<WithStreamedUnaryMethod_GetServer<WithStreamedUnaryMethod_AddNeighbor<WithStreamedUnaryMethod_DeleteNeighbor<WithStreamedUnaryMethod_GetNeighbor<WithStreamedUnaryMethod_ResetNeighbor<WithStreamedUnaryMethod_SoftResetNeighbor<WithStreamedUnaryMethod_ShutdownNeighbor<WithStreamedUnaryMethod_EnableNeighbor<WithStreamedUnaryMethod_DisableNeighbor<WithStreamedUnaryMethod_GetRib<WithStreamedUnaryMethod_ValidateRib<WithStreamedUnaryMethod_AddPath<WithStreamedUnaryMethod_DeletePath<WithStreamedUnaryMethod_EnableMrt<WithStreamedUnaryMethod_DisableMrt<WithStreamedUnaryMethod_AddBmp<WithStreamedUnaryMethod_DeleteBmp<WithStreamedUnaryMethod_GetRpki<WithStreamedUnaryMethod_AddRpki<WithStreamedUnaryMethod_DeleteRpki<WithStreamedUnaryMethod_EnableRpki<WithStreamedUnaryMethod_DisableRpki<WithStreamedUnaryMethod_ResetRpki<WithStreamedUnaryMethod_SoftResetRpki<WithStreamedUnaryMethod_GetRoa<WithStreamedUnaryMethod_EnableZebra<WithStreamedUnaryMethod_AddVrf<WithStreamedUnaryMethod_DeleteVrf<WithStreamedUnaryMethod_GetVrf<WithStreamedUnaryMethod_GetDefinedSet<WithStreamedUnaryMethod_AddDefinedSet<WithStreamedUnaryMethod_DeleteDefinedSet<WithStreamedUnaryMethod_ReplaceDefinedSet<WithStreamedUnaryMethod_GetStatement<WithStreamedUnaryMethod_AddStatement<WithStreamedUnaryMethod_DeleteStatement<WithStreamedUnaryMethod_ReplaceStatement<WithStreamedUnaryMethod_GetPolicy<WithStreamedUnaryMethod_AddPolicy<WithStreamedUnaryMethod_DeletePolicy<WithStreamedUnaryMethod_ReplacePolicy<WithStreamedUnaryMethod_GetPolicyAssignment<WithStreamedUnaryMethod_AddPolicyAssignment<WithStreamedUnaryMethod_DeletePolicyAssignment<WithStreamedUnaryMethod_ReplacePolicyAssignment<WithStreamedUnaryMethod_GetRibInfo<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_GetPath() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::SplitServerStreamingHandler< ::gobgpapi::GetPathRequest, ::gobgpapi::Path>(std::bind(&WithSplitStreamingMethod_GetPath<BaseClass>::StreamedGetPath, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_GetPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPath(::grpc::ServerContext* context, const ::gobgpapi::GetPathRequest* request, ::grpc::ServerWriter< ::gobgpapi::Path>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPath(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::gobgpapi::GetPathRequest,::gobgpapi::Path>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_MonitorRib : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_MonitorRib() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::SplitServerStreamingHandler< ::gobgpapi::MonitorRibRequest, ::gobgpapi::Destination>(std::bind(&WithSplitStreamingMethod_MonitorRib<BaseClass>::StreamedMonitorRib, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_MonitorRib() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MonitorRib(::grpc::ServerContext* context, const ::gobgpapi::MonitorRibRequest* request, ::grpc::ServerWriter< ::gobgpapi::Destination>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedMonitorRib(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::gobgpapi::MonitorRibRequest,::gobgpapi::Destination>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_MonitorPeerState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_MonitorPeerState() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::SplitServerStreamingHandler< ::gobgpapi::Arguments, ::gobgpapi::Peer>(std::bind(&WithSplitStreamingMethod_MonitorPeerState<BaseClass>::StreamedMonitorPeerState, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_MonitorPeerState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MonitorPeerState(::grpc::ServerContext* context, const ::gobgpapi::Arguments* request, ::grpc::ServerWriter< ::gobgpapi::Peer>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedMonitorPeerState(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::gobgpapi::Arguments,::gobgpapi::Peer>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetPath<WithSplitStreamingMethod_MonitorRib<WithSplitStreamingMethod_MonitorPeerState<Service > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_StartServer<WithStreamedUnaryMethod_StopServer<WithStreamedUnaryMethod_GetServer<WithStreamedUnaryMethod_AddNeighbor<WithStreamedUnaryMethod_DeleteNeighbor<WithStreamedUnaryMethod_GetNeighbor<WithStreamedUnaryMethod_ResetNeighbor<WithStreamedUnaryMethod_SoftResetNeighbor<WithStreamedUnaryMethod_ShutdownNeighbor<WithStreamedUnaryMethod_EnableNeighbor<WithStreamedUnaryMethod_DisableNeighbor<WithStreamedUnaryMethod_GetRib<WithSplitStreamingMethod_GetPath<WithStreamedUnaryMethod_ValidateRib<WithStreamedUnaryMethod_AddPath<WithStreamedUnaryMethod_DeletePath<WithSplitStreamingMethod_MonitorRib<WithSplitStreamingMethod_MonitorPeerState<WithStreamedUnaryMethod_EnableMrt<WithStreamedUnaryMethod_DisableMrt<WithStreamedUnaryMethod_AddBmp<WithStreamedUnaryMethod_DeleteBmp<WithStreamedUnaryMethod_GetRpki<WithStreamedUnaryMethod_AddRpki<WithStreamedUnaryMethod_DeleteRpki<WithStreamedUnaryMethod_EnableRpki<WithStreamedUnaryMethod_DisableRpki<WithStreamedUnaryMethod_ResetRpki<WithStreamedUnaryMethod_SoftResetRpki<WithStreamedUnaryMethod_GetRoa<WithStreamedUnaryMethod_EnableZebra<WithStreamedUnaryMethod_AddVrf<WithStreamedUnaryMethod_DeleteVrf<WithStreamedUnaryMethod_GetVrf<WithStreamedUnaryMethod_GetDefinedSet<WithStreamedUnaryMethod_AddDefinedSet<WithStreamedUnaryMethod_DeleteDefinedSet<WithStreamedUnaryMethod_ReplaceDefinedSet<WithStreamedUnaryMethod_GetStatement<WithStreamedUnaryMethod_AddStatement<WithStreamedUnaryMethod_DeleteStatement<WithStreamedUnaryMethod_ReplaceStatement<WithStreamedUnaryMethod_GetPolicy<WithStreamedUnaryMethod_AddPolicy<WithStreamedUnaryMethod_DeletePolicy<WithStreamedUnaryMethod_ReplacePolicy<WithStreamedUnaryMethod_GetPolicyAssignment<WithStreamedUnaryMethod_AddPolicyAssignment<WithStreamedUnaryMethod_DeletePolicyAssignment<WithStreamedUnaryMethod_ReplacePolicyAssignment<WithStreamedUnaryMethod_GetRibInfo<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace gobgpapi


#endif  // GRPC_gobgp_2eproto__INCLUDED
